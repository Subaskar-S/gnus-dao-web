name: Deploy to Cloudflare Pages

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

permissions:
  contents: read
  deployments: write
  statuses: write
  checks: write
  pull-requests: write

env:
  NODE_VERSION: '18'
  YARN_CACHE_FOLDER: ~/.yarn

jobs:
  # Separate job for code quality checks
  quality-checks:
    runs-on: ubuntu-latest
    name: Code Quality Checks

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: yarn install --immutable

      - name: Type check
        run: yarn type-check

      - name: Fix linting issues
        run: node scripts/targeted-lint-fix.js
        continue-on-error: true

      - name: Lint (Production)
        run: yarn lint --max-warnings 50
        continue-on-error: true

      - name: Run tests
        run: yarn test:ci
        continue-on-error: true

  # Main deployment job
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to Cloudflare Pages
    needs: quality-checks
    if: github.event_name == 'push'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: yarn install --immutable

      - name: Fix linting issues for production
        run: node scripts/targeted-lint-fix.js
        continue-on-error: true

      - name: Build for Cloudflare Pages
        env:
          NODE_ENV: production
          STATIC_EXPORT: true
          NEXT_PUBLIC_WALLETCONNECT_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_WALLETCONNECT_PROJECT_ID }}
          NEXT_PUBLIC_SEPOLIA_RPC_URL: ${{ secrets.NEXT_PUBLIC_SEPOLIA_RPC_URL }}
          NEXT_PUBLIC_SEPOLIA_GNUS_DAO_ADDRESS: ${{ secrets.NEXT_PUBLIC_SEPOLIA_GNUS_DAO_ADDRESS }}
          NEXT_PUBLIC_PINATA_API_KEY: ${{ secrets.NEXT_PUBLIC_PINATA_API_KEY }}
          NEXT_PUBLIC_PINATA_SECRET_KEY: ${{ secrets.NEXT_PUBLIC_PINATA_SECRET_KEY }}
        run: |
          echo "üöÄ Starting Cloudflare Pages build..."
          node scripts/build-cloudflare.js

      - name: Validate build output
        run: |
          echo "üìä Build validation:"
          ls -la out/
          echo "üìÅ Critical files:"
          test -f out/index.html && echo "‚úÖ index.html" || echo "‚ùå index.html missing"
          test -f out/_redirects && echo "‚úÖ _redirects" || echo "‚ùå _redirects missing"
          test -f out/_headers && echo "‚úÖ _headers" || echo "‚ùå _headers missing"
          test -d out/_next && echo "‚úÖ _next directory" || echo "‚ùå _next directory missing"

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: gnus-dao-web
          directory: out
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          wranglerVersion: '3'

  # Preview deployment for pull requests
  preview:
    runs-on: ubuntu-latest
    name: Preview Deployment
    needs: quality-checks
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: yarn install --immutable

      - name: Build for Preview
        env:
          NODE_ENV: production
          STATIC_EXPORT: true
        run: |
          echo "üîç Building preview deployment..."
          node scripts/build-cloudflare.js

      - name: Deploy Preview to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: gnus-dao-web
          directory: out
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          wranglerVersion: '3'
