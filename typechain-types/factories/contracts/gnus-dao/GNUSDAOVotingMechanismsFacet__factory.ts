/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  GNUSDAOVotingMechanismsFacet,
  GNUSDAOVotingMechanismsFacetInterface,
} from "../../../contracts/gnus-dao/GNUSDAOVotingMechanismsFacet";

const _abi = [
  {
    inputs: [],
    name: "VotesTooLarge",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroVotes",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "votes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cost",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "voter",
            type: "address",
          },
        ],
        internalType: "struct GNUSDAOVotingMechanismsFacet.QuadraticVoteData[]",
        name: "voteData",
        type: "tuple[]",
      },
    ],
    name: "analyzeVoteDistribution",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalVoters",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalTokensSpent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "averageVotesPerVoter",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "medianVotesPerVoter",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "giniCoefficient",
            type: "uint256",
          },
        ],
        internalType: "struct GNUSDAOVotingMechanismsFacet.VoteAnalysis",
        name: "analysis",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenBalance",
        type: "uint256",
      },
    ],
    name: "calculateMaxVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "maxVotes",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenBudget",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxVotesPerWallet",
        type: "uint256",
      },
    ],
    name: "calculateOptimalVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "optimalVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "remainingTokens",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "voters",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "eligibleVoters",
        type: "uint256",
      },
    ],
    name: "calculateParticipationRate",
    outputs: [
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "votes",
        type: "uint256",
      },
    ],
    name: "calculateQuadraticCost",
    outputs: [
      {
        internalType: "uint256",
        name: "cost",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalVoters",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalTokensSpent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxTokensPerVoter",
        type: "uint256",
      },
    ],
    name: "calculateSybilResistanceScore",
    outputs: [
      {
        internalType: "uint256",
        name: "score",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokensCost",
        type: "uint256",
      },
    ],
    name: "calculateVoteWeight",
    outputs: [
      {
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quorumThreshold",
        type: "uint256",
      },
    ],
    name: "checkQuorum",
    outputs: [
      {
        internalType: "bool",
        name: "meetsQuorum",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "votes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokensCost",
        type: "uint256",
      },
    ],
    name: "getVoteEfficiency",
    outputs: [
      {
        internalType: "uint256",
        name: "efficiency",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "votes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxVotesPerWallet",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenBalance",
        type: "uint256",
      },
    ],
    name: "validateVote",
    outputs: [
      {
        internalType: "bool",
        name: "valid",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "cost",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610c2b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c806374dd0fea11610076578063cc951dba1161005b578063cc951dba1461016d578063d88a22cb14610197578063f103dca0146101f657600080fd5b806374dd0fea1461013757806382397cce1461014a57600080fd5b806343bbcf49116100a757806343bbcf4914610111578063546c9fbc146100f05780635c6239031461012457600080fd5b806303ba2316146100c35780632c3556d6146100f0575b600080fd5b6100d66100d1366004610954565b610209565b604080519283526020830191909152015b60405180910390f35b6101036100fe366004610976565b610256565b6040519081526020016100e7565b61010361011f36600461098f565b610274565b610103610132366004610954565b6102f0565b610103610145366004610976565b610316565b61015d610158366004610954565b111590565b60405190151581526020016100e7565b61018061017b36600461098f565b6103a3565b6040805192151583526020830191909152016100e7565b6101aa6101a5366004610a2b565b6103e4565b6040516100e79190600060c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015292915050565b610103610204366004610954565b610769565b6000808361021c5750600090508061024f565b61022584610784565b915082821115610233578291505b600061023f8380610b38565b905061024b8186610b57565b9150505b9250929050565b60008161026557506000919050565b61026e82610784565b92915050565b6000831580610281575082155b1561028e575060006102e9565b600061029a8585610b84565b90506000816102aa856064610b38565b6102b49190610b84565b9050606481116102c757606492506102e6565b60c881116102e1576102da8160c8610b57565b92506102e6565b600092505b50505b9392505050565b6000816102ff5750600061026e565b8161030c846103e8610b38565b6102e99190610b84565b60008161034f576040517fcdad98fd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6fffffffffffffffffffffffffffffffff821115610399576040517f7c6164d600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61026e8280610b38565b600080846103b6575060009050806103dc565b838511156103c9575060009050806103dc565b6103d38580610b38565b90508281111591505b935093915050565b61041d6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81518061042a5750919050565b60008060005b838110156104a05785818151811061044a5761044a610b98565b602002602001015160000151836104619190610bae565b925085818151811061047557610475610b98565b6020026020010151602001518261048c9190610bae565b91508061049881610bc6565b915050610430565b508184526020840183905260408401819052826104be5760006104c8565b6104c88383610b84565b606085015282156107525760008367ffffffffffffffff8111156104ee576104ee6109bb565b604051908082528060200260200182016040528015610517578160200160208202803683370190505b50905060005b848110156105725786818151811061053757610537610b98565b60200260200101516000015182828151811061055557610555610b98565b60209081029190910101528061056a81610bc6565b91505061051d565b5060005b610581600186610b57565b81101561069d5760005b60016105978388610b57565b6105a19190610b57565b81101561068a57826105b4826001610bae565b815181106105c4576105c4610b98565b60200260200101518382815181106105de576105de610b98565b6020026020010151111561067857600083828151811061060057610600610b98565b60200260200101519050838260016106189190610bae565b8151811061062857610628610b98565b602002602001015184838151811061064257610642610b98565b6020908102919091010152808461065a846001610bae565b8151811061066a5761066a610b98565b602002602001018181525050505b8061068281610bc6565b91505061058b565b508061069581610bc6565b915050610576565b506106a9600285610be1565b610722576002816106ba8287610b84565b815181106106ca576106ca610b98565b60200260200101518260016002886106e29190610b84565b6106ec9190610b57565b815181106106fc576106fc610b98565b602002602001015161070e9190610bae565b6107189190610b84565b6080860152610750565b8061072e600286610b84565b8151811061073e5761073e610b98565b60200260200101518560800181815250505b505b61075b856107eb565b60a085015250919392505050565b6000816107785750600061026e565b8161030c846064610b38565b60008161079357506000919050565b600060026107a2846001610bae565b6107ac9190610b84565b90508291505b818110156107e5579050806002816107ca8186610b84565b6107d49190610bae565b6107de9190610b84565b90506107b2565b50919050565b8051600090600181116108015750600092915050565b6000805b8281101561084a5784818151811061081f5761081f610b98565b602002602001015160000151826108369190610bae565b91508061084281610bc6565b915050610805565b508061085a575060009392505050565b6000805b8381101561092b5760005b848110156109185786818151811061088357610883610b98565b6020026020010151600001518783815181106108a1576108a1610b98565b6020026020010151600001511115610906578681815181106108c5576108c5610b98565b6020026020010151600001518783815181106108e3576108e3610b98565b6020026020010151600001516108f99190610b57565b6109039084610bae565b92505b8061091081610bc6565b915050610869565b508061092381610bc6565b91505061085e565b506109368284610b38565b610941826064610b38565b61094b9190610b84565b95945050505050565b6000806040838503121561096757600080fd5b50508035926020909101359150565b60006020828403121561098857600080fd5b5035919050565b6000806000606084860312156109a457600080fd5b505081359360208301359350604090920135919050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156109f4576109f46109bb565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610a2357610a236109bb565b604052919050565b60006020808385031215610a3e57600080fd5b823567ffffffffffffffff80821115610a5657600080fd5b818501915085601f830112610a6a57600080fd5b813581811115610a7c57610a7c6109bb565b610a8a848260051b016109fa565b81815284810192506060918202840185019188831115610aa957600080fd5b938501935b82851015610b165780858a031215610ac65760008081fd5b610ace6109d1565b85358152868601358782015260408087013573ffffffffffffffffffffffffffffffffffffffff81168114610b035760008081fd5b9082015284529384019392850192610aae565b50979650505050505050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610b5257610b52610b22565b500290565b600082821015610b6957610b69610b22565b500390565b634e487b7160e01b600052601260045260246000fd5b600082610b9357610b93610b6e565b500490565b634e487b7160e01b600052603260045260246000fd5b60008219821115610bc157610bc1610b22565b500190565b6000600019821415610bda57610bda610b22565b5060010190565b600082610bf057610bf0610b6e565b50069056fea264697066735822122045b0c07f216ac300bb1bbe28ca9e5587d1c4084fbd0219428b845439a795450264736f6c63430008090033";

type GNUSDAOVotingMechanismsFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GNUSDAOVotingMechanismsFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GNUSDAOVotingMechanismsFacet__factory extends ContractFactory {
  constructor(...args: GNUSDAOVotingMechanismsFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      GNUSDAOVotingMechanismsFacet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): GNUSDAOVotingMechanismsFacet__factory {
    return super.connect(runner) as GNUSDAOVotingMechanismsFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GNUSDAOVotingMechanismsFacetInterface {
    return new Interface(_abi) as GNUSDAOVotingMechanismsFacetInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): GNUSDAOVotingMechanismsFacet {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as GNUSDAOVotingMechanismsFacet;
  }
}
