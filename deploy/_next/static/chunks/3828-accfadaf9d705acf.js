"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3828],{67649:function(e,t,n){n.d(t,{hg:function(){return a.hg},oM:function(){return a.oM}});var a=n(19756)},45921:function(e,t,n){n.d(t,{X:function(){return a}});var a=n(2142)},56334:function(e,t,n){n.d(t,{z:function(){return c}});var a=n(57437),r=n(2265),i=n(59763),o=n(69804),s=n(93448);let d=(0,o.j)("inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50",{variants:{variant:{default:"bg-primary text-primary-foreground hover:bg-primary/90",destructive:"bg-destructive text-destructive-foreground hover:bg-destructive/90",outline:"border border-input bg-background hover:bg-accent hover:text-accent-foreground",secondary:"bg-secondary text-secondary-foreground hover:bg-secondary/80",ghost:"hover:bg-accent hover:text-accent-foreground",link:"text-primary underline-offset-4 hover:underline"},size:{default:"h-10 px-4 py-2",sm:"h-9 rounded-md px-3",lg:"h-11 rounded-md px-8",icon:"h-10 w-10"}},defaultVariants:{variant:"default",size:"default"}}),c=r.forwardRef((e,t)=>{let{className:n,variant:r,size:o,asChild:c=!1,...l}=e,u=c?i.g7:"button";return(0,a.jsx)(u,{className:(0,s.cn)(d({variant:r,size:o,className:n})),ref:t,...l})});c.displayName="Button"},22071:function(e,t,n){let a;n.d(t,{CR:function(){return p},Nb:function(){return u},RM:function(){return l},dU:function(){return s},yG:function(){return c},yv:function(){return d}});var r=n(19250),i=n(25566);i.env.STATIC_EXPORT;let o=r.z.object({NEXT_PUBLIC_WALLETCONNECT_PROJECT_ID:r.z.string().min(1,"WalletConnect Project ID is required for wallet functionality"),NEXT_PUBLIC_APP_NAME:r.z.string().default("GNUS DAO"),NEXT_PUBLIC_APP_URL:r.z.string().url("Invalid app URL").default("https://dao.gnus.ai"),NEXT_PUBLIC_APP_VERSION:r.z.string().default("1.0.0"),NEXT_PUBLIC_ETHEREUM_RPC_URL:r.z.string().default("https://eth.llamarpc.com"),NEXT_PUBLIC_BASE_RPC_URL:r.z.string().default("https://mainnet.base.org"),NEXT_PUBLIC_POLYGON_RPC_URL:r.z.string().default("https://polygon-rpc.com"),NEXT_PUBLIC_SKALE_RPC_URL:r.z.string().default("https://mainnet.skalenodes.com/v1/elated-tan-skat"),NEXT_PUBLIC_ETHEREUM_RPC_URL_BACKUP:r.z.string().url().optional(),NEXT_PUBLIC_BASE_RPC_URL_BACKUP:r.z.string().url().optional(),NEXT_PUBLIC_POLYGON_RPC_URL_BACKUP:r.z.string().url().optional(),NEXT_PUBLIC_ALCHEMY_API_KEY:r.z.string().optional(),NEXT_PUBLIC_INFURA_API_KEY:r.z.string().optional(),NEXT_PUBLIC_SEPOLIA_RPC_URL:r.z.string().url().optional(),NEXT_PUBLIC_ETHEREUM_GNUS_DAO_ADDRESS:r.z.string().regex(/^0x[a-fA-F0-9]{40}$/,"Invalid Ethereum contract address").optional(),NEXT_PUBLIC_SEPOLIA_GNUS_DAO_ADDRESS:r.z.string().regex(/^0x[a-fA-F0-9]{40}$/,"Invalid Sepolia contract address").optional(),NEXT_PUBLIC_BASE_GNUS_DAO_ADDRESS:r.z.string().regex(/^0x[a-fA-F0-9]{40}$/,"Invalid Base contract address").optional(),NEXT_PUBLIC_POLYGON_GNUS_DAO_ADDRESS:r.z.string().regex(/^0x[a-fA-F0-9]{40}$/,"Invalid Polygon contract address").optional(),NEXT_PUBLIC_SKALE_GNUS_DAO_ADDRESS:r.z.string().regex(/^0x[a-fA-F0-9]{40}$/,"Invalid SKALE contract address").optional(),NODE_ENV:r.z.enum(["development","production","test"]).default("development"),NEXT_TELEMETRY_DISABLED:r.z.string().optional()});function s(){return a||(a=function(){try{let e={NEXT_PUBLIC_WALLETCONNECT_PROJECT_ID:"805f6520f2f2934352c65fe6bd70d15d",NEXT_PUBLIC_APP_NAME:'"GNUS DAO"',NEXT_PUBLIC_APP_URL:"https://dao.gnus.ai",NEXT_PUBLIC_APP_VERSION:"1.0.0",NEXT_PUBLIC_ETHEREUM_RPC_URL:"https://eth.llamarpc.com",NEXT_PUBLIC_BASE_RPC_URL:"https://mainnet.base.org",NEXT_PUBLIC_POLYGON_RPC_URL:"https://polygon.llamarpc.com",NEXT_PUBLIC_SKALE_RPC_URL:"https://mainnet.skalenodes.com/v1/green-giddy-denebola",NEXT_PUBLIC_ETHEREUM_RPC_URL_BACKUP:"https://ethereum.publicnode.com",NEXT_PUBLIC_BASE_RPC_URL_BACKUP:"https://base.publicnode.com",NEXT_PUBLIC_POLYGON_RPC_URL_BACKUP:"https://polygon.publicnode.com",NEXT_PUBLIC_ALCHEMY_API_KEY:"",NEXT_PUBLIC_INFURA_API_KEY:"",NEXT_PUBLIC_SEPOLIA_RPC_URL:"https://sepolia.infura.io/v3/a9555646b9fb4da6ab4cc08c782f85ee",NEXT_PUBLIC_ETHEREUM_GNUS_DAO_ADDRESS:"0x0000000000000000000000000000000000000000",NEXT_PUBLIC_SEPOLIA_GNUS_DAO_ADDRESS:"0x4d638F3c61F7B8BBa4461f80a4aa7315795812EF",NEXT_PUBLIC_BASE_GNUS_DAO_ADDRESS:"0x0000000000000000000000000000000000000000",NEXT_PUBLIC_POLYGON_GNUS_DAO_ADDRESS:"0x0000000000000000000000000000000000000000",NEXT_PUBLIC_SKALE_GNUS_DAO_ADDRESS:"0x0000000000000000000000000000000000000000",NODE_ENV:"production",NEXT_TELEMETRY_DISABLED:i.env.NEXT_TELEMETRY_DISABLED};return o.parse(e)}catch(e){if(e instanceof r.z.ZodError){let t=e.errors.map(e=>"".concat(e.path.join("."),": ").concat(e.message)).join("\n");throw Error("Environment validation failed:\n".concat(t))}throw e}}()),a}function d(){return"production"===s().NODE_ENV}function c(){return"development"===s().NODE_ENV}function l(e){let t=s();switch(e){case"ethereum":return t.NEXT_PUBLIC_ETHEREUM_RPC_URL;case"base":return t.NEXT_PUBLIC_BASE_RPC_URL;case"polygon":return t.NEXT_PUBLIC_POLYGON_RPC_URL;case"skale":return t.NEXT_PUBLIC_SKALE_RPC_URL;default:throw Error("Unsupported network: ".concat(e))}}function u(){let e=s();return e.NEXT_PUBLIC_SEPOLIA_RPC_URL?e.NEXT_PUBLIC_SEPOLIA_RPC_URL:"https://rpc.sepolia.org"}function p(e){let t=s();switch(e){case"ethereum":return t.NEXT_PUBLIC_ETHEREUM_GNUS_DAO_ADDRESS;case"sepolia":return t.NEXT_PUBLIC_SEPOLIA_GNUS_DAO_ADDRESS;case"base":return t.NEXT_PUBLIC_BASE_GNUS_DAO_ADDRESS;case"polygon":return t.NEXT_PUBLIC_POLYGON_GNUS_DAO_ADDRESS;case"skale":return t.NEXT_PUBLIC_SKALE_GNUS_DAO_ADDRESS;default:return}}try{s()}catch(e){if(d())throw Error("Application configuration error")}},97456:function(e,t,n){n.d(t,{Mo:function(){return i},bA:function(){return r},xw:function(){return o}});var a=n(22071);let r={2046399126:{id:2046399126,name:"skale-europa",displayName:"SKALE Europa Hub",nativeCurrency:{name:"sFUEL",symbol:"sFUEL",decimals:18},rpcUrls:{default:{http:[(0,a.RM)("skale")]},public:{http:[(0,a.RM)("skale")]}},blockExplorers:{default:{name:"SKALE Explorer",url:"https://elated-tan-skat.explorer.mainnet.skalenodes.com"}},gasless:!0,features:["zero-gas","fast-finality","ethereum-compatible"],iconUrl:"/networks/skale.svg"},8453:{id:8453,name:"base",displayName:"Base",nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},rpcUrls:{default:{http:[(0,a.RM)("base")]},public:{http:[(0,a.RM)("base")]}},blockExplorers:{default:{name:"BaseScan",url:"https://basescan.org"}},lowCost:!0,features:["low-cost","fast-finality","coinbase-backed"],iconUrl:"/networks/base.svg"},137:{id:137,name:"polygon",displayName:"Polygon",nativeCurrency:{name:"MATIC",symbol:"MATIC",decimals:18},rpcUrls:{default:{http:[(0,a.RM)("polygon")]},public:{http:[(0,a.RM)("polygon")]}},blockExplorers:{default:{name:"PolygonScan",url:"https://polygonscan.com"}},lowCost:!0,features:["low-cost","high-adoption","defi-ecosystem"],iconUrl:"/networks/polygon.svg"},42161:{id:42161,name:"arbitrum",displayName:"Arbitrum One",nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},rpcUrls:{default:{http:["https://arb1.arbitrum.io/rpc"]},public:{http:["https://arb1.arbitrum.io/rpc"]}},blockExplorers:{default:{name:"Arbiscan",url:"https://arbiscan.io"}},lowCost:!0,features:["low-cost","optimistic-rollup","ethereum-security"],iconUrl:"/networks/arbitrum.svg"},1:{id:1,name:"ethereum",displayName:"Ethereum",nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},rpcUrls:{default:{http:[(0,a.RM)("ethereum")]},public:{http:[(0,a.RM)("ethereum")]}},blockExplorers:{default:{name:"Etherscan",url:"https://etherscan.io"}},features:["mainnet","highest-security","maximum-decentralization"],iconUrl:"/networks/ethereum.svg"},11155111:{id:11155111,name:"sepolia",displayName:"Sepolia Testnet",nativeCurrency:{name:"Sepolia Ether",symbol:"SEP",decimals:18},rpcUrls:{default:{http:[(0,a.Nb)()]},public:{http:[(0,a.Nb)()]}},blockExplorers:{default:{name:"Etherscan",url:"https://sepolia.etherscan.io"}},testnet:!0,features:["testnet","development","free-eth"],iconUrl:"/networks/ethereum.svg"},84532:{id:84532,name:"base-sepolia",displayName:"Base Sepolia",nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},rpcUrls:{default:{http:["https://sepolia.base.org"]},public:{http:["https://sepolia.base.org"]}},blockExplorers:{default:{name:"BaseScan",url:"https://sepolia.basescan.org"}},testnet:!0,features:["testnet","low-cost","base-l2"],iconUrl:"/networks/base.svg"}};function i(e){return r[e]}function o(){return Object.values(r)}},73546:function(e,t,n){n.d(t,{$_:function(){return l},OV:function(){return o},r7:function(){return i}}),n(45921);var a,r,i,o,s=n(22071);let d={11155111:{diamond:(0,s.CR)("sepolia")||"0x4d638F3c61F7B8BBa4461f80a4aa7315795812EF",deployer:"0x6Ec7f5dFb77c7CAbAB4Ed722660b1d8bA1605B43"},8453:{diamond:(0,s.CR)("base")||"0x0000000000000000000000000000000000000000",deployer:"0x0000000000000000000000000000000000000000"},2046399126:{diamond:(0,s.CR)("skale")||"0x0000000000000000000000000000000000000000",deployer:"0x0000000000000000000000000000000000000000"},137:{diamond:(0,s.CR)("polygon")||"0x0000000000000000000000000000000000000000",deployer:"0x0000000000000000000000000000000000000000"},1:{diamond:(0,s.CR)("ethereum")||"0x0000000000000000000000000000000000000000",deployer:"0x0000000000000000000000000000000000000000"}},c=["function facets() external view returns (tuple(address facetAddress, bytes4[] functionSelectors)[])","function facetFunctionSelectors(address _facet) external view returns (bytes4[])","function facetAddresses() external view returns (address[])","function facetAddress(bytes4 _functionSelector) external view returns (address)","function supportsInterface(bytes4 _interfaceId) external view returns (bool)","function diamondCut(tuple(address facetAddress, uint8 action, bytes4[] functionSelectors)[] _diamondCut, address _init, bytes _calldata) external","function owner() external view returns (address)","function transferOwnership(address _newOwner) external","function hasRole(bytes32 role, address account) external view returns (bool)","function getRoleAdmin(bytes32 role) external view returns (bytes32)","function grantRole(bytes32 role, address account) external","function revokeRole(bytes32 role, address account) external","function renounceRole(bytes32 role, address account) external","event DiamondCut(tuple(address facetAddress, uint8 action, bytes4[] functionSelectors)[] _diamondCut, address _init, bytes _calldata)","event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)","event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)","event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)","event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)","function name() external view returns (string)","function symbol() external view returns (string)","function decimals() external view returns (uint8)","function totalSupply() external view returns (uint256)","function balanceOf(address account) external view returns (uint256)","function transfer(address to, uint256 amount) external returns (bool)","function allowance(address owner, address spender) external view returns (uint256)","function approve(address spender, uint256 amount) external returns (bool)","function transferFrom(address from, address to, uint256 amount) external returns (bool)","function delegate(address delegatee) external","function delegates(address account) external view returns (address)","function getCurrentVotes(address account) external view returns (uint256)","function getPriorVotes(address account, uint256 blockNumber) external view returns (uint256)","event Transfer(address indexed from, address indexed to, uint256 value)","event Approval(address indexed owner, address indexed spender, uint256 value)","event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate)","event DelegateVotesChanged(address indexed delegate, uint256 previousBalance, uint256 newBalance)","function propose(address[] targets, uint256[] values, bytes[] calldatas, string description) external returns (uint256)","function proposalCount() external view returns (uint256)","function proposals(uint256 proposalId) external view returns (tuple(uint256 id, address proposer, uint256 eta, uint256 startBlock, uint256 endBlock, uint256 forVotes, uint256 againstVotes, uint256 abstainVotes, bool canceled, bool executed))","function getActions(uint256 proposalId) external view returns (address[] targets, uint256[] values, string[] signatures, bytes[] calldatas)","function getReceipt(uint256 proposalId, address voter) external view returns (tuple(bool hasVoted, uint8 support, uint256 votes))","function state(uint256 proposalId) external view returns (uint8)","function castVote(uint256 proposalId, uint8 support) external returns (uint256)","function castVoteWithReason(uint256 proposalId, uint8 support, string reason) external returns (uint256)","function castVoteBySig(uint256 proposalId, uint8 support, uint8 v, bytes32 r, bytes32 s) external returns (uint256)","function queue(uint256 proposalId) external","function execute(uint256 proposalId) external payable","function cancel(uint256 proposalId) external","function votingDelay() external view returns (uint256)","function votingPeriod() external view returns (uint256)","function proposalThreshold() external view returns (uint256)","function quorumVotes() external view returns (uint256)","event ProposalCreated(uint256 indexed id, address indexed proposer, address[] targets, uint256[] values, string[] signatures, bytes[] calldatas, uint256 startBlock, uint256 endBlock, string description)","event VoteCast(address indexed voter, uint256 indexed proposalId, uint8 support, uint256 votes, string reason)","event ProposalCanceled(uint256 indexed id)","event ProposalQueued(uint256 indexed id, uint256 eta)","event ProposalExecuted(uint256 indexed id)","function castQuadraticVote(uint256 proposalId, uint8 support, uint256 voteCredits) external returns (uint256)","function getVoteCredits(address voter) external view returns (uint256)","function getQuadraticVoteWeight(uint256 voteCredits) external pure returns (uint256)","function quadraticVoteReceipts(uint256 proposalId, address voter) external view returns (tuple(bool hasVoted, uint8 support, uint256 credits, uint256 weight))","function allocateVoteCredits(address voter, uint256 credits) external","function burnVoteCredits(address voter, uint256 credits) external","function transferVoteCredits(address to, uint256 credits) external","event QuadraticVoteCast(address indexed voter, uint256 indexed proposalId, uint8 support, uint256 credits, uint256 weight)","event VoteCreditsAllocated(address indexed voter, uint256 credits)","event VoteCreditsBurned(address indexed voter, uint256 credits)","event VoteCreditsTransferred(address indexed from, address indexed to, uint256 credits)","function treasuryBalance() external view returns (uint256)","function treasuryTokenBalance(address token) external view returns (uint256)","function proposeTreasuryAction(address target, uint256 value, bytes calldata, string description) external returns (uint256)","function executeTreasuryAction(uint256 actionId) external","event TreasuryActionProposed(uint256 indexed actionId, address indexed proposer, address target, uint256 value, string description)","event TreasuryActionExecuted(uint256 indexed actionId, address target, uint256 value)"];function l(e){let t=d[e];return t&&"0x0000000000000000000000000000000000000000"!==t.diamond?{address:t.diamond,abi:c}:null}(a=i||(i={}))[a.Pending=0]="Pending",a[a.Active=1]="Active",a[a.Canceled=2]="Canceled",a[a.Defeated=3]="Defeated",a[a.Succeeded=4]="Succeeded",a[a.Queued=5]="Queued",a[a.Expired=6]="Expired",a[a.Executed=7]="Executed",(r=o||(o={}))[r.Against=0]="Against",r[r.For=1]="For",r[r.Abstain=2]="Abstain"},3263:function(e,t,n){n.d(t,{u:function(){return d}});var a=n(45921);let r=JSON.parse('{"Mt":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event","_diamondFacet":"GNUSDAOGovernanceTokenFacet"},{"anonymous":false,"inputs":[{"components":[{"internalType":"address","name":"facetAddress","type":"address"},{"internalType":"enum IDiamondCut.FacetCutAction","name":"action","type":"uint8"},{"internalType":"bytes4[]","name":"functionSelectors","type":"bytes4[]"}],"indexed":false,"internalType":"struct IDiamondCut.FacetCut[]","name":"_diamondCut","type":"tuple[]"},{"indexed":false,"internalType":"address","name":"_init","type":"address"},{"indexed":false,"internalType":"bytes","name":"_calldata","type":"bytes"}],"name":"DiamondCut","type":"event","_diamondFacet":"DiamondCutFacet"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"string","name":"initializer","type":"string"}],"name":"InitLog","type":"event","_diamondFacet":"GNUSDAOInitFacet"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"minter","type":"address"}],"name":"MinterAdded","type":"event","_diamondFacet":"GNUSDAOGovernanceTokenFacet"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"minter","type":"address"}],"name":"MinterRemoved","type":"event","_diamondFacet":"GNUSDAOGovernanceTokenFacet"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event","_diamondFacet":"GNUSDAOOwnershipFacet"},{"anonymous":false,"inputs":[],"name":"Paused","type":"event","_diamondFacet":"GNUSDAOGovernanceTokenFacet"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event","_diamondFacet":"GNUSDAOGovernanceFacet"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"ProposalCancelled","type":"event","_diamondFacet":"GNUSDAOGovernanceFacet"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":true,"internalType":"address","name":"proposer","type":"address"},{"indexed":false,"internalType":"string","name":"title","type":"string"},{"indexed":false,"internalType":"string","name":"ipfsHash","type":"string"},{"indexed":false,"internalType":"uint256","name":"startTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"endTime","type":"uint256"}],"name":"ProposalCreated","type":"event","_diamondFacet":"GNUSDAOGovernanceFacet"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"ProposalExecuted","type":"event","_diamondFacet":"GNUSDAOGovernanceFacet"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event","_diamondFacet":"GNUSDAOOwnershipFacet"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event","_diamondFacet":"GNUSDAOOwnershipFacet"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event","_diamondFacet":"GNUSDAOOwnershipFacet"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"TokensBurned","type":"event","_diamondFacet":"GNUSDAOGovernanceTokenFacet"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"TokensMinted","type":"event","_diamondFacet":"GNUSDAOGovernanceTokenFacet"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event","_diamondFacet":"GNUSDAOGovernanceTokenFacet"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"TreasuryDeposit","type":"event","_diamondFacet":"GNUSDAOGovernanceFacet"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"TreasuryWithdrawal","type":"event","_diamondFacet":"GNUSDAOGovernanceFacet"},{"anonymous":false,"inputs":[],"name":"Unpaused","type":"event","_diamondFacet":"GNUSDAOGovernanceTokenFacet"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event","_diamondFacet":"GNUSDAOGovernanceFacet"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"uint256","name":"votes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"tokensCost","type":"uint256"}],"name":"VoteCast","type":"event","_diamondFacet":"GNUSDAOGovernanceFacet"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"delegatee","type":"address"}],"name":"VoteDelegated","type":"event","_diamondFacet":"GNUSDAOGovernanceFacet"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"delegatee","type":"address"}],"name":"VoteDelegationRevoked","type":"event","_diamondFacet":"GNUSDAOGovernanceFacet"},{"inputs":[],"name":"AlreadyCancelled","type":"error","_diamondFacet":"GNUSDAOGovernanceFacet"},{"inputs":[],"name":"AlreadyExecuted","type":"error","_diamondFacet":"GNUSDAOGovernanceFacet"},{"inputs":[],"name":"AlreadyInitialized","type":"error","_diamondFacet":"GNUSDAOGovernanceTokenFacet"},{"inputs":[],"name":"AlreadyMinter","type":"error","_diamondFacet":"GNUSDAOGovernanceTokenFacet"},{"inputs":[],"name":"AlreadyPaused","type":"error","_diamondFacet":"GNUSDAOGovernanceTokenFacet"},{"inputs":[],"name":"AlreadyVoted","type":"error","_diamondFacet":"GNUSDAOGovernanceFacet"},{"inputs":[],"name":"ApproveFromZero","type":"error","_diamondFacet":"GNUSDAOGovernanceTokenFacet"},{"inputs":[],"name":"ApproveToZero","type":"error","_diamondFacet":"GNUSDAOGovernanceTokenFacet"},{"inputs":[],"name":"BurnFromZero","type":"error","_diamondFacet":"GNUSDAOGovernanceTokenFacet"},{"inputs":[],"name":"CannotCancelExecuted","type":"error","_diamondFacet":"GNUSDAOGovernanceFacet"},{"inputs":[],"name":"CannotDelegateToSelf","type":"error","_diamondFacet":"GNUSDAOGovernanceFacet"},{"inputs":[],"name":"CooldownNotMet","type":"error","_diamondFacet":"GNUSDAOGovernanceFacet"},{"inputs":[],"name":"EmptyIPFS","type":"error","_diamondFacet":"GNUSDAOGovernanceFacet"},{"inputs":[],"name":"EmptyTitle","type":"error","_diamondFacet":"GNUSDAOGovernanceFacet"},{"inputs":[],"name":"ExceedsMaxSupply","type":"error","_diamondFacet":"GNUSDAOGovernanceTokenFacet"},{"inputs":[],"name":"ExceedsMaxVotes","type":"error","_diamondFacet":"GNUSDAOGovernanceFacet"},{"inputs":[{"internalType":"address","name":"_initializationContractAddress","type":"address"},{"internalType":"bytes","name":"_calldata","type":"bytes"}],"name":"InitializationFunctionReverted","type":"error","_diamondFacet":"DiamondCutFacet"},{"inputs":[],"name":"InsufficientAllowance","type":"error","_diamondFacet":"GNUSDAOGovernanceTokenFacet"},{"inputs":[],"name":"InsufficientBalance","type":"error","_diamondFacet":"GNUSDAOGovernanceTokenFacet"},{"inputs":[],"name":"InsufficientTokens","type":"error","_diamondFacet":"GNUSDAOGovernanceFacet"},{"inputs":[],"name":"InsufficientTreasuryBalance","type":"error","_diamondFacet":"GNUSDAOGovernanceFacet"},{"inputs":[],"name":"InsufficientVotingPower","type":"error","_diamondFacet":"GNUSDAOGovernanceFacet"},{"inputs":[],"name":"MintToZero","type":"error","_diamondFacet":"GNUSDAOGovernanceTokenFacet"},{"inputs":[],"name":"NoActiveDelegation","type":"error","_diamondFacet":"GNUSDAOGovernanceFacet"},{"inputs":[],"name":"NotAMinter","type":"error","_diamondFacet":"GNUSDAOGovernanceTokenFacet"},{"inputs":[],"name":"NotMinter","type":"error","_diamondFacet":"GNUSDAOGovernanceTokenFacet"},{"inputs":[],"name":"NotPaused","type":"error","_diamondFacet":"GNUSDAOGovernanceTokenFacet"},{"inputs":[],"name":"NotTreasuryManager","type":"error","_diamondFacet":"GNUSDAOGovernanceFacet"},{"inputs":[],"name":"OnlyProposerOrOwner","type":"error","_diamondFacet":"GNUSDAOGovernanceFacet"},{"inputs":[],"name":"ProposalAlreadyCancelled","type":"error","_diamondFacet":"GNUSDAOGovernanceFacet"},{"inputs":[],"name":"ProposalNotActive","type":"error","_diamondFacet":"GNUSDAOGovernanceFacet"},{"inputs":[],"name":"ProposalNotFound","type":"error","_diamondFacet":"GNUSDAOGovernanceFacet"},{"inputs":[],"name":"QuorumNotMet","type":"error","_diamondFacet":"GNUSDAOGovernanceFacet"},{"inputs":[],"name":"TokensPaused","type":"error","_diamondFacet":"GNUSDAOGovernanceTokenFacet"},{"inputs":[],"name":"TransferFromZero","type":"error","_diamondFacet":"GNUSDAOGovernanceTokenFacet"},{"inputs":[],"name":"TransferToZero","type":"error","_diamondFacet":"GNUSDAOGovernanceTokenFacet"},{"inputs":[],"name":"VotesTooLarge","type":"error","_diamondFacet":"GNUSDAOVotingMechanismsFacet"},{"inputs":[],"name":"VotingEnded","type":"error","_diamondFacet":"GNUSDAOGovernanceFacet"},{"inputs":[],"name":"VotingNotStarted","type":"error","_diamondFacet":"GNUSDAOGovernanceFacet"},{"inputs":[],"name":"VotingStillActive","type":"error","_diamondFacet":"GNUSDAOGovernanceFacet"},{"inputs":[],"name":"ZeroAddress","type":"error","_diamondFacet":"GNUSDAOGovernanceTokenFacet"},{"inputs":[],"name":"ZeroAmount","type":"error","_diamondFacet":"GNUSDAOGovernanceTokenFacet"},{"inputs":[],"name":"ZeroVotes","type":"error","_diamondFacet":"GNUSDAOGovernanceFacet"},{"inputs":[{"internalType":"address","name":"_minter","type":"address"}],"name":"addMinter","outputs":[],"stateMutability":"nonpayable","type":"function","_diamondFacet":"GNUSDAOGovernanceTokenFacet","_diamondSelector":"0x983b2d56"},{"inputs":[{"internalType":"address","name":"manager","type":"address"}],"name":"addTreasuryManager","outputs":[],"stateMutability":"nonpayable","type":"function","_diamondFacet":"GNUSDAOGovernanceFacet","_diamondSelector":"0xa333658f"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function","_diamondFacet":"GNUSDAOGovernanceTokenFacet","_diamondSelector":"0xdd62ed3e"},{"inputs":[{"components":[{"internalType":"uint256","name":"votes","type":"uint256"},{"internalType":"uint256","name":"cost","type":"uint256"},{"internalType":"address","name":"voter","type":"address"}],"internalType":"struct GNUSDAOVotingMechanismsFacet.QuadraticVoteData[]","name":"voteData","type":"tuple[]"}],"name":"analyzeVoteDistribution","outputs":[{"components":[{"internalType":"uint256","name":"totalVotes","type":"uint256"},{"internalType":"uint256","name":"totalVoters","type":"uint256"},{"internalType":"uint256","name":"totalTokensSpent","type":"uint256"},{"internalType":"uint256","name":"averageVotesPerVoter","type":"uint256"},{"internalType":"uint256","name":"medianVotesPerVoter","type":"uint256"},{"internalType":"uint256","name":"giniCoefficient","type":"uint256"}],"internalType":"struct GNUSDAOVotingMechanismsFacet.VoteAnalysis","name":"analysis","type":"tuple"}],"stateMutability":"pure","type":"function","_diamondFacet":"GNUSDAOVotingMechanismsFacet","_diamondSelector":"0xd88a22cb"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function","_diamondFacet":"GNUSDAOGovernanceTokenFacet","_diamondSelector":"0x095ea7b3"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function","_diamondFacet":"GNUSDAOGovernanceTokenFacet","_diamondSelector":"0x70a08231"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function","_diamondFacet":"GNUSDAOGovernanceTokenFacet","_diamondSelector":"0x42966c68"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function","_diamondFacet":"GNUSDAOGovernanceTokenFacet","_diamondSelector":"0x79cc6790"},{"inputs":[{"internalType":"uint256","name":"tokenBalance","type":"uint256"}],"name":"calculateMaxVotes","outputs":[{"internalType":"uint256","name":"maxVotes","type":"uint256"}],"stateMutability":"pure","type":"function","_diamondFacet":"GNUSDAOVotingMechanismsFacet","_diamondSelector":"0x2c3556d6"},{"inputs":[{"internalType":"uint256","name":"tokenBudget","type":"uint256"},{"internalType":"uint256","name":"maxVotesPerWallet","type":"uint256"}],"name":"calculateOptimalVotes","outputs":[{"internalType":"uint256","name":"optimalVotes","type":"uint256"},{"internalType":"uint256","name":"remainingTokens","type":"uint256"}],"stateMutability":"pure","type":"function","_diamondFacet":"GNUSDAOVotingMechanismsFacet","_diamondSelector":"0x03ba2316"},{"inputs":[{"internalType":"uint256","name":"voters","type":"uint256"},{"internalType":"uint256","name":"eligibleVoters","type":"uint256"}],"name":"calculateParticipationRate","outputs":[{"internalType":"uint256","name":"rate","type":"uint256"}],"stateMutability":"pure","type":"function","_diamondFacet":"GNUSDAOVotingMechanismsFacet","_diamondSelector":"0xf103dca0"},{"inputs":[{"internalType":"uint256","name":"votes","type":"uint256"}],"name":"calculateQuadraticCost","outputs":[{"internalType":"uint256","name":"cost","type":"uint256"}],"stateMutability":"pure","type":"function","_diamondFacet":"GNUSDAOVotingMechanismsFacet","_diamondSelector":"0x74dd0fea"},{"inputs":[{"internalType":"uint256","name":"totalVoters","type":"uint256"},{"internalType":"uint256","name":"totalTokensSpent","type":"uint256"},{"internalType":"uint256","name":"maxTokensPerVoter","type":"uint256"}],"name":"calculateSybilResistanceScore","outputs":[{"internalType":"uint256","name":"score","type":"uint256"}],"stateMutability":"pure","type":"function","_diamondFacet":"GNUSDAOVotingMechanismsFacet","_diamondSelector":"0x43bbcf49"},{"inputs":[{"internalType":"uint256","name":"tokensCost","type":"uint256"}],"name":"calculateVoteWeight","outputs":[{"internalType":"uint256","name":"weight","type":"uint256"}],"stateMutability":"pure","type":"function","_diamondFacet":"GNUSDAOVotingMechanismsFacet","_diamondSelector":"0x546c9fbc"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"cancelProposal","outputs":[],"stateMutability":"nonpayable","type":"function","_diamondFacet":"GNUSDAOGovernanceFacet","_diamondSelector":"0xe0a8f6f5"},{"inputs":[{"internalType":"uint256","name":"totalVotes","type":"uint256"},{"internalType":"uint256","name":"quorumThreshold","type":"uint256"}],"name":"checkQuorum","outputs":[{"internalType":"bool","name":"meetsQuorum","type":"bool"}],"stateMutability":"pure","type":"function","_diamondFacet":"GNUSDAOVotingMechanismsFacet","_diamondSelector":"0x82397cce"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function","_diamondFacet":"GNUSDAOGovernanceTokenFacet","_diamondSelector":"0x313ce567"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function","_diamondFacet":"GNUSDAOOwnershipFacet","_diamondSelector":"0xa217fddf"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegateVotes","outputs":[],"stateMutability":"nonpayable","type":"function","_diamondFacet":"GNUSDAOGovernanceFacet","_diamondSelector":"0x8c5fcdda"},{"inputs":[],"name":"depositToTreasury","outputs":[],"stateMutability":"payable","type":"function","_diamondFacet":"GNUSDAOGovernanceFacet","_diamondSelector":"0x718b2058"},{"inputs":[{"components":[{"internalType":"address","name":"facetAddress","type":"address"},{"internalType":"enum IDiamondCut.FacetCutAction","name":"action","type":"uint8"},{"internalType":"bytes4[]","name":"functionSelectors","type":"bytes4[]"}],"internalType":"struct IDiamondCut.FacetCut[]","name":"_diamondCut","type":"tuple[]"},{"internalType":"address","name":"_init","type":"address"},{"internalType":"bytes","name":"_calldata","type":"bytes"}],"name":"diamondCut","outputs":[],"stateMutability":"nonpayable","type":"function","_diamondFacet":"DiamondCutFacet","_diamondSelector":"0x1f931c1c"},{"inputs":[],"name":"diamondInitialize000","outputs":[],"stateMutability":"nonpayable","type":"function","_diamondFacet":"GNUSDAOInitFacet","_diamondSelector":"0xc47ea632"},{"inputs":[],"name":"diamondInitialize100","outputs":[],"stateMutability":"nonpayable","type":"function","_diamondFacet":"GNUSDAOInitFacet","_diamondSelector":"0xd4fb2a3e"},{"inputs":[],"name":"diamondInitUpgrade100","outputs":[],"stateMutability":"nonpayable","type":"function","_diamondFacet":"GNUSDAOInitFacet","_diamondSelector":"0xfef41fe4"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"executeProposal","outputs":[],"stateMutability":"nonpayable","type":"function","_diamondFacet":"GNUSDAOGovernanceFacet","_diamondSelector":"0x0d61b519"},{"inputs":[{"internalType":"bytes4","name":"_functionSelector","type":"bytes4"}],"name":"facetAddress","outputs":[{"internalType":"address","name":"facetAddress_","type":"address"}],"stateMutability":"view","type":"function","_diamondFacet":"DiamondLoupeFacet","_diamondSelector":"0xcdffacc6"},{"inputs":[],"name":"facetAddresses","outputs":[{"internalType":"address[]","name":"facetAddresses_","type":"address[]"}],"stateMutability":"view","type":"function","_diamondFacet":"DiamondLoupeFacet","_diamondSelector":"0x52ef6b2c"},{"inputs":[{"internalType":"address","name":"_facet","type":"address"}],"name":"facetFunctionSelectors","outputs":[{"internalType":"bytes4[]","name":"_facetFunctionSelectors","type":"bytes4[]"}],"stateMutability":"view","type":"function","_diamondFacet":"DiamondLoupeFacet","_diamondSelector":"0xadfca15e"},{"inputs":[],"name":"facets","outputs":[{"components":[{"internalType":"address","name":"facetAddress","type":"address"},{"internalType":"bytes4[]","name":"functionSelectors","type":"bytes4[]"}],"internalType":"struct IDiamondLoupe.Facet[]","name":"facets_","type":"tuple[]"}],"stateMutability":"view","type":"function","_diamondFacet":"DiamondLoupeFacet","_diamondSelector":"0x7a0ed627"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDelegatedTo","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","_diamondFacet":"GNUSDAOGovernanceFacet","_diamondSelector":"0xce5119ee"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDelegatedVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function","_diamondFacet":"GNUSDAOGovernanceFacet","_diamondSelector":"0x011b938f"},{"inputs":[],"name":"getInitialSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function","_diamondFacet":"GNUSDAOGovernanceTokenFacet","_diamondSelector":"0x81a4a6d8"},{"inputs":[],"name":"getMaxSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function","_diamondFacet":"GNUSDAOValueFacet","_diamondSelector":"0x4c0f38c2"},{"inputs":[],"name":"getNumericValue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function","_diamondFacet":"GNUSDAOValueFacet","_diamondSelector":"0xd13d9066"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastVotingPower","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function","_diamondFacet":"GNUSDAOGovernanceTokenFacet","_diamondSelector":"0xb0ca253e"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"getProposalBasic","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"proposer","type":"address"},{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"ipfsHash","type":"string"}],"stateMutability":"view","type":"function","_diamondFacet":"GNUSDAOGovernanceFacet","_diamondSelector":"0x9f83c4b2"},{"inputs":[],"name":"getProposalCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function","_diamondFacet":"GNUSDAOGovernanceFacet","_diamondSelector":"0xc08cc02d"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"getProposalStatus","outputs":[{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"endTime","type":"uint256"},{"internalType":"uint256","name":"totalVotes","type":"uint256"},{"internalType":"uint256","name":"totalVoters","type":"uint256"},{"internalType":"bool","name":"executed","type":"bool"},{"internalType":"bool","name":"cancelled","type":"bool"}],"stateMutability":"view","type":"function","_diamondFacet":"GNUSDAOGovernanceFacet","_diamondSelector":"0x401853b7"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function","_diamondFacet":"GNUSDAOOwnershipFacet","_diamondSelector":"0x248a9ca3"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","_diamondFacet":"GNUSDAOOwnershipFacet","_diamondSelector":"0x9010d07c"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function","_diamondFacet":"GNUSDAOOwnershipFacet","_diamondSelector":"0xca15c873"},{"inputs":[],"name":"getTokenName","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function","_diamondFacet":"GNUSDAOValueFacet","_diamondSelector":"0x862b092b"},{"inputs":[],"name":"getTokenSymbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function","_diamondFacet":"GNUSDAOValueFacet","_diamondSelector":"0xf1850af8"},{"inputs":[],"name":"getTreasuryBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function","_diamondFacet":"GNUSDAOGovernanceFacet","_diamondSelector":"0x9b5655dc"},{"inputs":[],"name":"getValue","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function","_diamondFacet":"GNUSDAOValueFacet","_diamondSelector":"0x20965255"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"address","name":"voter","type":"address"}],"name":"getVote","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function","_diamondFacet":"GNUSDAOGovernanceFacet","_diamondSelector":"0xbc3f931f"},{"inputs":[{"internalType":"uint256","name":"votes","type":"uint256"},{"internalType":"uint256","name":"tokensCost","type":"uint256"}],"name":"getVoteEfficiency","outputs":[{"internalType":"uint256","name":"efficiency","type":"uint256"}],"stateMutability":"pure","type":"function","_diamondFacet":"GNUSDAOVotingMechanismsFacet","_diamondSelector":"0x5c623903"},{"inputs":[],"name":"getVotingConfig","outputs":[{"components":[{"internalType":"uint256","name":"proposalThreshold","type":"uint256"},{"internalType":"uint256","name":"votingDelay","type":"uint256"},{"internalType":"uint256","name":"votingPeriod","type":"uint256"},{"internalType":"uint256","name":"quorumThreshold","type":"uint256"},{"internalType":"uint256","name":"maxVotesPerWallet","type":"uint256"},{"internalType":"uint256","name":"proposalCooldown","type":"uint256"}],"internalType":"struct GNUSDAOGovernanceFacet.VotingConfig","name":"","type":"tuple"}],"stateMutability":"view","type":"function","_diamondFacet":"GNUSDAOGovernanceFacet","_diamondSelector":"0x721c3c64"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotingPower","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function","_diamondFacet":"GNUSDAOGovernanceTokenFacet","_diamondSelector":"0xbb4d4436"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function","_diamondFacet":"GNUSDAOOwnershipFacet","_diamondSelector":"0x2f2ff15d"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function","_diamondFacet":"GNUSDAOOwnershipFacet","_diamondSelector":"0x91d14854"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"address","name":"voter","type":"address"}],"name":"hasVoted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function","_diamondFacet":"GNUSDAOGovernanceFacet","_diamondSelector":"0x43859632"},{"inputs":[{"internalType":"address","name":"_initialOwner","type":"address"}],"name":"initializeGovernance","outputs":[],"stateMutability":"nonpayable","type":"function","_diamondFacet":"GNUSDAOGovernanceFacet","_diamondSelector":"0x55d202a6"},{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_symbol","type":"string"},{"internalType":"address","name":"_initialOwner","type":"address"}],"name":"initializeGovernanceToken","outputs":[],"stateMutability":"nonpayable","type":"function","_diamondFacet":"GNUSDAOGovernanceTokenFacet","_diamondSelector":"0xe8a2bf77"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"isMinter","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function","_diamondFacet":"GNUSDAOGovernanceTokenFacet","_diamondSelector":"0xaa271e1a"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"isTreasuryManager","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function","_diamondFacet":"GNUSDAOGovernanceFacet","_diamondSelector":"0x3b665994"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function","_diamondFacet":"GNUSDAOGovernanceTokenFacet","_diamondSelector":"0x40c10f19"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function","_diamondFacet":"GNUSDAOGovernanceTokenFacet","_diamondSelector":"0x06fdde03"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"owner_","type":"address"}],"stateMutability":"view","type":"function","_diamondFacet":"GNUSDAOOwnershipFacet","_diamondSelector":"0x8da5cb5b"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function","_diamondFacet":"GNUSDAOGovernanceTokenFacet","_diamondSelector":"0x8456cb59"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function","_diamondFacet":"GNUSDAOGovernanceFacet","_diamondSelector":"0x5c975abb"},{"inputs":[{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"ipfsHash","type":"string"}],"name":"propose","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function","_diamondFacet":"GNUSDAOGovernanceFacet","_diamondSelector":"0x1c4afc57"},{"inputs":[{"internalType":"address","name":"_minter","type":"address"}],"name":"removeMinter","outputs":[],"stateMutability":"nonpayable","type":"function","_diamondFacet":"GNUSDAOGovernanceTokenFacet","_diamondSelector":"0x3092afd5"},{"inputs":[{"internalType":"address","name":"manager","type":"address"}],"name":"removeTreasuryManager","outputs":[],"stateMutability":"nonpayable","type":"function","_diamondFacet":"GNUSDAOGovernanceFacet","_diamondSelector":"0x2c60bbf1"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function","_diamondFacet":"GNUSDAOGovernanceFacet","_diamondSelector":"0x715018a6"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function","_diamondFacet":"GNUSDAOOwnershipFacet","_diamondSelector":"0x36568abe"},{"inputs":[],"name":"revokeDelegation","outputs":[],"stateMutability":"nonpayable","type":"function","_diamondFacet":"GNUSDAOGovernanceFacet","_diamondSelector":"0xa4d31805"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function","_diamondFacet":"GNUSDAOOwnershipFacet","_diamondSelector":"0xd547741f"},{"inputs":[{"internalType":"bytes4","name":"_interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function","_diamondFacet":"DiamondLoupeFacet","_diamondSelector":"0x01ffc9a7"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function","_diamondFacet":"GNUSDAOGovernanceTokenFacet","_diamondSelector":"0x95d89b41"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function","_diamondFacet":"GNUSDAOGovernanceTokenFacet","_diamondSelector":"0x18160ddd"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function","_diamondFacet":"GNUSDAOGovernanceTokenFacet","_diamondSelector":"0xa9059cbb"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function","_diamondFacet":"GNUSDAOGovernanceTokenFacet","_diamondSelector":"0x23b872dd"},{"inputs":[{"internalType":"address","name":"_newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function","_diamondFacet":"GNUSDAOOwnershipFacet","_diamondSelector":"0xf2fde38b"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function","_diamondFacet":"GNUSDAOGovernanceTokenFacet","_diamondSelector":"0x3f4ba83a"},{"inputs":[],"name":"UPGRADER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function","_diamondFacet":"GNUSDAOOwnershipFacet","_diamondSelector":"0xf72c0d8b"},{"inputs":[{"internalType":"uint256","name":"votes","type":"uint256"},{"internalType":"uint256","name":"maxVotesPerWallet","type":"uint256"},{"internalType":"uint256","name":"tokenBalance","type":"uint256"}],"name":"validateVote","outputs":[{"internalType":"bool","name":"valid","type":"bool"},{"internalType":"uint256","name":"cost","type":"uint256"}],"stateMutability":"pure","type":"function","_diamondFacet":"GNUSDAOVotingMechanismsFacet","_diamondSelector":"0xcc951dba"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint256","name":"votes","type":"uint256"}],"name":"vote","outputs":[],"stateMutability":"nonpayable","type":"function","_diamondFacet":"GNUSDAOGovernanceFacet","_diamondSelector":"0xb384abef"},{"inputs":[{"internalType":"address payable","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawFromTreasury","outputs":[],"stateMutability":"nonpayable","type":"function","_diamondFacet":"GNUSDAOGovernanceFacet","_diamondSelector":"0x0663af08"}]}').Mt;var i=n(73546),o=n(70649);class s{async initialize(e,t,n){try{if(this.provider=e,this.signer=t||null,n)this.chainId=n;else{let t=await e.getNetwork();this.chainId=Number(t.chainId)}let s=(0,i.$_)(this.chainId);if(!s)return o.kg.warn("GNUS DAO contract not deployed on chain ".concat(this.chainId)),!1;return this.contract=new a.X.Contract(s.address,r,t||e),!0}catch(e){return o.kg.error("Failed to initialize GNUS DAO service:",e),!1}}isInitialized(){return null!==this.contract&&null!==this.chainId}getContractAddress(){var e;return(null===(e=this.contract)||void 0===e?void 0:e.target)||null}getChainId(){return this.chainId}async getFacets(){if(!this.contract)throw Error("Service not initialized");try{var e,t;let n=await (null===(e=(t=this.contract).facets)||void 0===e?void 0:e.call(t));if(!n)return[];return n.map(e=>({facetAddress:e.facetAddress,functionSelectors:e.functionSelectors}))}catch(e){throw o.kg.error("Error getting facets:",e),e}}async supportsInterface(e){if(!this.contract)throw Error("Service not initialized");try{var t,n;return await (null===(t=(n=this.contract).supportsInterface)||void 0===t?void 0:t.call(n,e))||!1}catch(e){return console.error("Error checking interface support:",e),!1}}async getTokenInfo(){if(!this.contract)throw Error("Service not initialized");try{var e,t,n,a,r,i,o,s;let[d,c,l,u]=await Promise.all([(null===(e=(t=this.contract).name)||void 0===e?void 0:e.call(t))||"GNUS Token",(null===(n=(a=this.contract).symbol)||void 0===n?void 0:n.call(a))||"GNUS",(null===(r=(i=this.contract).decimals)||void 0===r?void 0:r.call(i))||18,(null===(o=(s=this.contract).totalSupply)||void 0===o?void 0:o.call(s))||0n]);return{name:d,symbol:c,decimals:l,totalSupply:u}}catch(e){return console.error("Error getting token info:",e),null}}async getTokenBalance(e){if(!this.contract)throw Error("Service not initialized");try{var t,n;return await (null===(t=(n=this.contract).balanceOf)||void 0===t?void 0:t.call(n,e))||0n}catch(e){return console.error("Error getting token balance:",e),0n}}async getVotingPower(e){if(!this.contract)throw Error("Service not initialized");try{var t,n;return await (null===(t=(n=this.contract).getCurrentVotes)||void 0===t?void 0:t.call(n,e))||0n}catch(e){return console.error("Error getting voting power:",e),0n}}async delegate(e){if(!this.contract||!this.signer)throw Error("Service not initialized or no signer available");try{var t,n;return await (null===(t=(n=this.contract).delegate)||void 0===t?void 0:t.call(n,e))}catch(e){throw console.error("Error delegating votes:",e),e}}async getProposalCount(){if(!this.contract)throw Error("Service not initialized");try{var e,t;return await (null===(e=(t=this.contract).proposalCount)||void 0===e?void 0:e.call(t))||0n}catch(e){return console.error("Error getting proposal count:",e),0n}}async getProposal(e){if(!this.contract)throw Error("Service not initialized");try{var t,n;let a=await (null===(t=(n=this.contract).proposals)||void 0===t?void 0:t.call(n,e));if(!a)return null;return{id:a.id,proposer:a.proposer,eta:a.eta,startBlock:a.startBlock,endBlock:a.endBlock,forVotes:a.forVotes,againstVotes:a.againstVotes,abstainVotes:a.abstainVotes,canceled:a.canceled,executed:a.executed}}catch(e){return console.error("Error getting proposal:",e),null}}async getProposalState(e){if(!this.contract)throw Error("Service not initialized");try{var t,n;return await (null===(t=(n=this.contract).state)||void 0===t?void 0:t.call(n,e))||i.r7.Pending}catch(e){return console.error("Error getting proposal state:",e),i.r7.Pending}}async createProposal(e,t,n,a){if(!this.contract||!this.signer)throw Error("Service not initialized or no signer available");try{var r,i;return await (null===(r=(i=this.contract).propose)||void 0===r?void 0:r.call(i,e,t,n,a))}catch(e){throw o.kg.error("Error creating proposal:",e),e}}async castVote(e,t,n){if(!this.contract||!this.signer)throw Error("Service not initialized or no signer available");try{var a,r,i,s;if(n)return await (null===(a=(r=this.contract).castVoteWithReason)||void 0===a?void 0:a.call(r,e,t,n));return await (null===(i=(s=this.contract).castVote)||void 0===i?void 0:i.call(s,e,t))}catch(e){throw o.kg.error("Error casting vote:",e),e}}async getVoteReceipt(e,t){if(!this.contract)throw Error("Service not initialized");try{var n,a;let r=await (null===(n=(a=this.contract).getReceipt)||void 0===n?void 0:n.call(a,e,t));if(!r)return null;return{hasVoted:r.hasVoted,support:r.support,votes:r.votes}}catch(e){return console.error("Error getting vote receipt:",e),null}}async getVoteCredits(e){if(!this.contract)throw Error("Service not initialized");try{var t,n;return await (null===(t=(n=this.contract).getVoteCredits)||void 0===t?void 0:t.call(n,e))||0n}catch(e){return console.error("Error getting vote credits:",e),0n}}async getQuadraticVoteWeight(e){if(!this.contract)throw Error("Service not initialized");try{var t,n;return await (null===(t=(n=this.contract).getQuadraticVoteWeight)||void 0===t?void 0:t.call(n,e))||0n}catch(t){return console.error("Error calculating quadratic vote weight:",t),BigInt(Math.floor(Math.sqrt(Number(e))))}}async castQuadraticVote(e,t,n){if(!this.contract||!this.signer)throw Error("Service not initialized or no signer available");try{var a,r;return await (null===(a=(r=this.contract).castQuadraticVote)||void 0===a?void 0:a.call(r,e,t,n))}catch(e){throw console.error("Error casting quadratic vote:",e),e}}async getTreasuryBalance(){if(!this.contract)throw Error("Service not initialized");try{var e,t;return await (null===(e=(t=this.contract).treasuryBalance)||void 0===e?void 0:e.call(t))||0n}catch(e){return console.error("Error getting treasury balance:",e),0n}}async getTreasuryTokenBalance(e){if(!this.contract)throw Error("Service not initialized");try{var t,n;return await (null===(t=(n=this.contract).treasuryTokenBalance)||void 0===t?void 0:t.call(n,e))||0n}catch(e){return console.error("Error getting treasury token balance:",e),0n}}async getGovernanceConfig(){if(!this.contract)throw Error("Service not initialized");try{var e,t,n,a,r,i,o,s;let[d,c,l,u]=await Promise.all([(null===(e=(t=this.contract).votingDelay)||void 0===e?void 0:e.call(t))||0n,(null===(n=(a=this.contract).votingPeriod)||void 0===n?void 0:n.call(a))||0n,(null===(r=(i=this.contract).proposalThreshold)||void 0===r?void 0:r.call(i))||0n,(null===(o=(s=this.contract).quorumVotes)||void 0===o?void 0:o.call(s))||0n]);return{votingDelay:d,votingPeriod:c,proposalThreshold:l,quorumVotes:u}}catch(e){return console.error("Error getting governance config:",e),null}}onProposalCreated(e){var t,n;if(!this.contract)throw Error("Service not initialized");null===(t=(n=this.contract).on)||void 0===t||t.call(n,"ProposalCreated",e)}onVoteCast(e){var t,n;if(!this.contract)throw Error("Service not initialized");null===(t=(n=this.contract).on)||void 0===t||t.call(n,"VoteCast",e)}removeAllListeners(){if(this.contract){var e,t;null===(e=(t=this.contract).removeAllListeners)||void 0===e||e.call(t)}}constructor(){this.contract=null,this.provider=null,this.signer=null,this.chainId=null}}let d=new s},96987:function(e,t,n){n.d(t,{h:function(){return d},TL:function(){return c},CG:function(){return l}});var a=n(19756),r=n(58173),i=n(48638),o=n(39855),s=n(88606);let d=(0,a.xC)({reducer:{web3:i.ZP,wallet:o.ZP,gnusDao:s.ZP},middleware:e=>e({serializableCheck:{ignoredActions:["web3/setProvider","web3/setSigner","wallet/connectWallet/fulfilled","wallet/setProvider","wallet/setSigner"],ignoredActionsPaths:["payload.provider","payload.signer"],ignoredPaths:["web3.provider","web3.signer","wallet.provider","wallet.signer"]}})}),c=()=>(0,r.I0)(),l=r.v9},88606:function(e,t,n){n.d(t,{ar:function(){return i},c6:function(){return o}});var a=n(67649),r=n(3263);let i=(0,a.hg)("gnusDao/initialize",async(e,t)=>{let{getState:n,rejectWithValue:a}=t,i=n(),{provider:o,signer:s,currentNetwork:d}=i.web3,{address:c}=i.wallet;if(!o||!d||!c)return a("Missing required Web3 components");try{if(!await r.u.initialize(o,s,d.id))return{initialized:!1,contractAddress:null,tokenBalance:0n,votingPower:0n,voteCredits:0n};{let[e,t,n]=await Promise.all([r.u.getTokenBalance(c).catch(()=>0n),r.u.getVotingPower(c).catch(()=>0n),r.u.getVoteCredits(c).catch(()=>0n)]);return{initialized:!0,contractAddress:r.u.getContractAddress(),tokenBalance:e,votingPower:t,voteCredits:n}}}catch(e){return a(e.message||"Failed to initialize GNUS DAO service")}}),o=(0,a.hg)("gnusDao/refreshData",async(e,t)=>{let{getState:n,rejectWithValue:a}=t,i=n(),{initialized:o}=i.gnusDao,{address:s}=i.wallet;if(!o||!s)return a("GNUS DAO not initialized or no wallet address");try{let[e,t,n]=await Promise.all([r.u.getTokenBalance(s).catch(()=>0n),r.u.getVotingPower(s).catch(()=>0n),r.u.getVoteCredits(s).catch(()=>0n)]);return{tokenBalance:e,votingPower:t,voteCredits:n,contractAddress:r.u.getContractAddress()}}catch(e){return a(e.message||"Failed to refresh GNUS DAO data")}}),s=(0,a.hg)("gnusDao/getTokenBalance",async(e,t)=>{let{rejectWithValue:n}=t;try{return await r.u.getTokenBalance(e)}catch(e){return n(e.message||"Failed to get token balance")}}),d=(0,a.hg)("gnusDao/getVotingPower",async(e,t)=>{let{rejectWithValue:n}=t;try{return await r.u.getVotingPower(e)}catch(e){return n(e.message||"Failed to get voting power")}}),c=(0,a.hg)("gnusDao/getVoteCredits",async(e,t)=>{let{rejectWithValue:n}=t;try{return await r.u.getVoteCredits(e)}catch(e){return n(e.message||"Failed to get vote credits")}}),l=(0,a.oM)({name:"gnusDao",initialState:{initialized:!1,contractAddress:null,tokenBalance:0n,votingPower:0n,voteCredits:0n,isLoading:!1,error:null},reducers:{setGnusDaoState:(e,t)=>{Object.assign(e,t.payload)},clearGnusDaoState:e=>{e.initialized=!1,e.contractAddress=null,e.tokenBalance=0n,e.votingPower=0n,e.voteCredits=0n,e.error=null},clearError:e=>{e.error=null}},extraReducers:e=>{e.addCase(i.pending,e=>{e.isLoading=!0,e.error=null}).addCase(i.fulfilled,(e,t)=>{e.isLoading=!1,e.initialized=t.payload.initialized,e.contractAddress=t.payload.contractAddress,e.tokenBalance=t.payload.tokenBalance,e.votingPower=t.payload.votingPower,e.voteCredits=t.payload.voteCredits,e.error=null}).addCase(i.rejected,(e,t)=>{e.isLoading=!1,e.error=t.payload}).addCase(o.pending,e=>{e.isLoading=!0,e.error=null}).addCase(o.fulfilled,(e,t)=>{e.isLoading=!1,e.tokenBalance=t.payload.tokenBalance,e.votingPower=t.payload.votingPower,e.voteCredits=t.payload.voteCredits,e.contractAddress=t.payload.contractAddress,e.error=null}).addCase(o.rejected,(e,t)=>{e.isLoading=!1,e.error=t.payload}).addCase(s.fulfilled,(e,t)=>{e.tokenBalance=t.payload}).addCase(d.fulfilled,(e,t)=>{e.votingPower=t.payload}).addCase(c.fulfilled,(e,t)=>{e.voteCredits=t.payload}).addMatcher(e=>"wallet/disconnect/fulfilled"===e.type,e=>{e.initialized=!1,e.contractAddress=null,e.tokenBalance=0n,e.votingPower=0n,e.voteCredits=0n,e.error=null})}}),{setGnusDaoState:u,clearGnusDaoState:p,clearError:y}=l.actions;t.ZP=l.reducer},39855:function(e,t,n){n.d(t,{Dm:function(){return c},If:function(){return l},co:function(){return d},connectWallet:function(){return s},is:function(){return _},wW:function(){return g}});var a=n(67649),r=n(45921),i=n(18289),o=n(97456);let s=(0,a.hg)("wallet/connect",async(e,t)=>{let{rejectWithValue:n}=t;try{let t;let n=(0,i.zc)(e);if(!n)throw Error("Connector ".concat(e," not found"));if(!n.isAvailable())throw Error("".concat(n.name," is not available. Please install it first."));let{provider:a,address:r,chainId:s}=await n.connect(),d=await a.getSigner(),c=(0,o.Mo)(s);if(1===s)try{t=await a.lookupAddress(r)||void 0}catch(e){}return localStorage.setItem("gnus-dao-wallet-connector",n.id),{provider:a,signer:d,connector:n,address:r,chainId:s,ensName:t,network:c}}catch(e){return n(e.message||"Failed to connect wallet")}}),d=(0,a.hg)("wallet/disconnect",async(e,t)=>{var n;let{getState:a}=t,r=a();if(window.ethereum&&(window.ethereum.removeAllListeners("accountsChanged"),window.ethereum.removeAllListeners("chainChanged"),window.ethereum.removeAllListeners("disconnect")),null===(n=r.wallet.connector)||void 0===n?void 0:n.disconnect)try{await r.wallet.connector.disconnect()}catch(e){}localStorage.removeItem("gnus-dao-wallet-connector")}),c=(0,a.hg)("wallet/refreshBalance",async(e,t)=>{let{getState:n,rejectWithValue:a}=t,{provider:i,address:o}=n().wallet;if(!i||!o)return a("No provider or address available");try{let e=await i.getBalance(o);return r.X.formatEther(e)}catch(e){return a(e.message||"Failed to refresh balance")}}),l=(0,a.hg)("wallet/switchNetwork",async(e,t)=>{let{rejectWithValue:n}=t;if(!window.ethereum)return n("No wallet connected");let a=(0,o.Mo)(e);if(!a)return n("Unsupported network: ".concat(e));try{return await window.ethereum.request({method:"wallet_switchEthereumChain",params:[{chainId:"0x".concat(e.toString(16))}]}),{chainId:e,network:a}}catch(t){if(4902!==t.code)return n(t.message||"Failed to switch network");try{return await window.ethereum.request({method:"wallet_addEthereumChain",params:[{chainId:"0x".concat(a.id.toString(16)),chainName:a.displayName,nativeCurrency:a.nativeCurrency,rpcUrls:a.rpcUrls.default.http,blockExplorerUrls:[a.blockExplorers.default.url]}]}),{chainId:e,network:a}}catch(e){return n(e.message||"Failed to add network")}}}),u=(0,a.oM)({name:"wallet",initialState:{isConnected:!1,isConnecting:!1,address:void 0,chainId:void 0,balance:void 0,ensName:void 0,error:void 0,provider:void 0,signer:void 0,connector:void 0},reducers:{setWalletState:(e,t)=>{Object.assign(e,t.payload)},setProvider:(e,t)=>{e.provider=t.payload},setSigner:(e,t)=>{e.signer=t.payload},setConnector:(e,t)=>{e.connector=t.payload},clearError:e=>{e.error=void 0},handleAccountsChanged:(e,t)=>{0===t.payload.length||(e.address=t.payload[0])},handleChainChanged:(e,t)=>{let n=parseInt(t.payload,16);e.chainId=n}},extraReducers:e=>{e.addCase(s.pending,e=>{e.isConnecting=!0,e.error=void 0}).addCase(s.fulfilled,(e,t)=>{e.isConnecting=!1,e.isConnected=!0,e.provider=t.payload.provider,e.signer=t.payload.signer,e.connector=t.payload.connector,e.address=t.payload.address,e.chainId=t.payload.chainId,e.ensName=t.payload.ensName,e.error=void 0}).addCase(s.rejected,(e,t)=>{e.isConnecting=!1,e.error=t.payload}).addCase(d.fulfilled,e=>{e.isConnected=!1,e.isConnecting=!1,e.address=void 0,e.chainId=void 0,e.balance=void 0,e.ensName=void 0,e.error=void 0,e.provider=void 0,e.signer=void 0,e.connector=void 0}).addCase(c.fulfilled,(e,t)=>{e.balance=t.payload}).addCase(c.rejected,(e,t)=>{}).addCase(l.fulfilled,(e,t)=>{e.chainId=t.payload.chainId}).addCase(l.rejected,(e,t)=>{e.error=t.payload})}}),{setWalletState:p,setProvider:y,setSigner:m,setConnector:v,clearError:f,handleAccountsChanged:g,handleChainChanged:_}=u.actions;t.ZP=u.reducer},48638:function(e,t,n){n.d(t,{QH:function(){return c},T7:function(){return d},rZ:function(){return s},sb:function(){return l}});var a=n(67649),r=n(45921),i=n(97456);let o={provider:void 0,signer:void 0,currentNetwork:void 0,supportedNetworks:Object.values(i.bA),isInitialized:!1},s=(0,a.hg)("web3/initialize",async(e,t)=>{let{getState:a,dispatch:r}=t;if(a().web3.isInitialized)return;let i=localStorage.getItem("gnus-dao-wallet-connector");if(i)try{let{connectWallet:e}=await Promise.resolve().then(n.bind(n,39855));r(e(i))}catch(e){localStorage.removeItem("gnus-dao-wallet-connector")}return!0}),d=(0,a.hg)("web3/sendTransaction",async(e,t)=>{let{getState:n,rejectWithValue:a}=t,{signer:r}=n().web3;if(!r)return a("No signer available");try{var i,o,s;let t=await r.sendTransaction(e);return{hash:t.hash,from:t.from,to:t.to,value:null===(i=t.value)||void 0===i?void 0:i.toString(),gasLimit:null===(o=t.gasLimit)||void 0===o?void 0:o.toString(),gasPrice:null===(s=t.gasPrice)||void 0===s?void 0:s.toString()}}catch(e){return a(e.message||"Transaction failed")}}),c=(0,a.hg)("web3/estimateGas",async(e,t)=>{let{getState:n,rejectWithValue:a}=t,{provider:r}=n().web3;if(!r)return a("No provider available");try{return(await r.estimateGas(e)).toString()}catch(e){return a(e.message||"Gas estimation failed")}}),l=(0,a.hg)("web3/getBalance",async(e,t)=>{let{getState:n,rejectWithValue:a}=t,{provider:i}=n().web3;if(!i)return a("No provider available");try{let t=await i.getBalance(e);return r.X.formatEther(t)}catch(e){return a(e.message||"Failed to get balance")}}),u=(0,a.oM)({name:"web3",initialState:o,reducers:{setProvider:(e,t)=>{e.provider=t.payload},setSigner:(e,t)=>{e.signer=t.payload},setCurrentNetwork:(e,t)=>{e.currentNetwork=t.payload},updateNetworkFromChainId:(e,t)=>{let n=(0,i.Mo)(t.payload);e.currentNetwork=n},clearWeb3State:e=>{e.provider=void 0,e.signer=void 0,e.currentNetwork=void 0}},extraReducers:e=>{e.addCase(s.fulfilled,e=>{e.isInitialized=!0}).addMatcher(e=>"wallet/connect/fulfilled"===e.type,(e,t)=>{e.provider=t.payload.provider,e.signer=t.payload.signer,e.currentNetwork=t.payload.network}).addMatcher(e=>"wallet/disconnect/fulfilled"===e.type,e=>{e.provider=void 0,e.signer=void 0,e.currentNetwork=void 0}).addMatcher(e=>"wallet/switchNetwork/fulfilled"===e.type,(e,t)=>{e.currentNetwork=t.payload.network})}}),{setProvider:p,setSigner:y,setCurrentNetwork:m,updateNetworkFromChainId:v,clearWeb3State:f}=u.actions;t.ZP=u.reducer},93448:function(e,t,n){n.d(t,{Tg:function(){return o},cn:function(){return i}});var a=n(40334),r=n(2997);function i(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return(0,r.m6)((0,a.W)(t))}function o(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:4;return e?"".concat(e.slice(0,t+2),"...").concat(e.slice(-t)):""}},70649:function(e,t,n){n.d(t,{kg:function(){return s}});var a,r,i=n(22071);(a=r||(r={}))[a.DEBUG=0]="DEBUG",a[a.INFO=1]="INFO",a[a.WARN=2]="WARN",a[a.ERROR=3]="ERROR";class o{generateSessionId(){return"".concat(Date.now(),"-").concat(Math.random().toString(36).substr(2,9))}setupGlobalErrorHandlers(){window.addEventListener("unhandledrejection",e=>{this.error("Unhandled Promise Rejection",{reason:e.reason,promise:e.promise})}),window.addEventListener("error",e=>{this.error("Global Error",{message:e.message,filename:e.filename,lineno:e.lineno,colno:e.colno,error:e.error})})}shouldLog(e){return e>=this.config.minLevel}formatMessage(e,t){let n=new Date().toISOString();return"[".concat(n,"] [").concat(["DEBUG","INFO","WARN","ERROR"][e],"] ").concat(t)}addEntry(e){this.entries.push(e),this.entries.length>this.config.maxEntries&&(this.entries=this.entries.slice(-this.config.maxEntries))}logToConsole(e){if(!this.config.enableConsole)return;let t=[this.formatMessage(e.level,e.message)];switch(e.context&&t.push(JSON.stringify(e.context)),e.error&&t.push(e.error.message),e.level){case 0:case 1:break;case 2:console.warn(...t);break;case 3:console.error(...t)}}async logToRemote(e){if(this.config.enableRemote&&this.config.remoteEndpoint)try{await fetch(this.config.remoteEndpoint,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({...e,sessionId:this.sessionId,userAgent:navigator.userAgent,url:window.location.href})})}catch(e){console.error("Failed to send log to remote endpoint:",e)}}log(e,t,n,a){if(!this.shouldLog(e))return;let r={level:e,message:t,timestamp:new Date,context:n,error:a,sessionId:this.sessionId};this.addEntry(r),this.logToConsole(r),this.config.enableRemote&&this.logToRemote(r).catch(()=>{})}debug(e,t){this.log(0,e,t)}info(e,t){this.log(1,e,t)}warn(e,t){this.log(2,e,t)}error(e,t,n){this.log(3,e,t,n)}web3(e,t){this.info("Web3: ".concat(e),{...t,category:"web3"})}user(e,t){this.info("User: ".concat(e),{...t,category:"user"})}performance(e,t,n){this.info("Performance: ".concat(e),{...n,category:"performance",value:t,unit:(null==n?void 0:n.unit)||"ms"})}getEntries(e,t){let n=this.entries;return void 0!==e&&(n=n.filter(t=>t.level>=e)),t&&(n=n.slice(-t)),n}clear(){this.entries=[]}export(){return JSON.stringify(this.entries,null,2)}constructor(e={}){this.entries=[],this.config={minLevel:(0,i.yG)()?0:1,enableConsole:!0,enableRemote:(0,i.yv)(),maxEntries:1e3,...e},this.sessionId=this.generateSessionId(),this.setupGlobalErrorHandlers()}}let s=new o},18289:function(e,t,n){n.d(t,{X0:function(){return i},zc:function(){return o}});var a=n(45921);let r=[{id:"metamask",name:"MetaMask",icon:"/wallets/metamask.svg",description:"Connect using MetaMask browser extension",isAvailable:()=>void 0!==window.ethereum&&!0===window.ethereum.isMetaMask,connect:async()=>{if(!window.ethereum)throw Error("MetaMask not found");let e=await window.ethereum.request({method:"eth_requestAccounts"});if(!e||0===e.length)throw Error("No accounts found");let t=new a.X.BrowserProvider(window.ethereum),n=await t.getNetwork();return{provider:t,address:e[0],chainId:Number(n.chainId)}},disconnect:async()=>{}},{id:"coinbase",name:"Coinbase Wallet",icon:"/wallets/coinbase.svg",description:"Connect using Coinbase Wallet",isAvailable:()=>{var e;return void 0!==window.ethereum&&(!0===window.ethereum.isCoinbaseWallet||(null===(e=window.ethereum.selectedProvider)||void 0===e?void 0:e.isCoinbaseWallet)===!0)},connect:async()=>{if(!window.ethereum)throw Error("Coinbase Wallet not found");let e=window.ethereum;window.ethereum.providers&&(e=window.ethereum.providers.find(e=>e.isCoinbaseWallet)||window.ethereum);let t=await e.request({method:"eth_requestAccounts"});if(!t||0===t.length)throw Error("No accounts found");let n=new a.X.BrowserProvider(e),r=await n.getNetwork();return{provider:n,address:t[0],chainId:Number(r.chainId)}}},{id:"walletconnect",name:"WalletConnect",icon:"/wallets/walletconnect.svg",description:"Connect using WalletConnect protocol",isAvailable:()=>!0,connect:async()=>{try{let{openWalletConnect:e}=await Promise.all([n.e(2957),n.e(9905),n.e(3329)]).then(n.bind(n,2471)),t=await e();if(!t)throw Error("Failed to initialize WalletConnect provider");let{provider:r,accounts:i}=t;if(!i||0===i.length)throw Error("No accounts available from WalletConnect");let o=new a.X.BrowserProvider(r),s=await o.getNetwork();return{provider:o,address:i[0],chainId:Number(s.chainId)}}catch(e){throw Error("Failed to connect with WalletConnect: ".concat(e instanceof Error?e.message:"Unknown error"))}},disconnect:async()=>{try{let{disconnectWalletConnect:e}=await Promise.all([n.e(2957),n.e(9905),n.e(3329)]).then(n.bind(n,2471));await e()}catch(e){}}},{id:"injected",name:"Browser Wallet",icon:"/wallets/generic.svg",description:"Connect using any injected wallet",isAvailable:()=>void 0!==window.ethereum&&!window.ethereum.isMetaMask&&!window.ethereum.isCoinbaseWallet,connect:async()=>{if(!window.ethereum)throw Error("No wallet found");let e=await window.ethereum.request({method:"eth_requestAccounts"});if(!e||0===e.length)throw Error("No accounts found");let t=new a.X.BrowserProvider(window.ethereum),n=await t.getNetwork();return{provider:t,address:e[0],chainId:Number(n.chainId)}}}];function i(){return r.filter(e=>e.isAvailable())}function o(e){return r.find(t=>t.id===e)}}}]);