(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2330],{35883:function(){},64315:function(e,t,s){"use strict";s.d(t,{Am:function(){return r.Am}});var r=s(966)},23645:function(e,t,s){"use strict";s.d(t,{$m:function(){return w},a1:function(){return x}});var r=s(57437),a=s(2265),i=s(49322),n=s(91723),o=s(88906),c=s(84286),l=s(56334),d=s(32853),u=s(34958),h=s(45921);class g{static generateNonce(){return h.X.hexlify(h.X.randomBytes(16))}static createMessage(e,t,s){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:window.location.host,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:window.location.origin,i=new Date,n=new Date(i.getTime()+this.SESSION_DURATION);return new u.SiweMessage({domain:r,address:e,statement:"Sign in to GNUS DAO governance platform with your Ethereum account.",uri:a,version:"1",chainId:t,nonce:s,issuedAt:i.toISOString(),expirationTime:n.toISOString(),resources:["https://gnus.ai","https://docs.gnus.ai"]})}static async signIn(e,t,s){try{let r=this.generateNonce(),a=this.createMessage(t,s,r),i=a.prepareMessage(),n=await e.signMessage(i);if(!await this.verifySignature(i,n,t))throw Error("Invalid signature");let o={address:t,chainId:s,issuedAt:a.issuedAt,expirationTime:a.expirationTime,nonce:r,signature:n,message:i};return this.storeSession(o),o}catch(e){throw console.error("SIWE sign in failed:",e),e}}static async verifySignature(e,t,s){try{let r=new u.SiweMessage(e),a=await r.verify({signature:t});return a.success&&a.data.address.toLowerCase()===s.toLowerCase()}catch(e){return console.error("Signature verification failed:",e),!1}}static getSession(){try{let e=localStorage.getItem(this.STORAGE_KEY);if(!e)return null;let t=JSON.parse(e);if(new Date>new Date(t.expirationTime))return this.clearSession(),null;return t}catch(e){return console.error("Failed to get session:",e),this.clearSession(),null}}static storeSession(e){try{localStorage.setItem(this.STORAGE_KEY,JSON.stringify(e))}catch(e){console.error("Failed to store session:",e)}}static clearSession(){try{localStorage.removeItem(this.STORAGE_KEY)}catch(e){console.error("Failed to clear session:",e)}}static signOut(){this.clearSession()}static isSessionValid(e){return!(!e||new Date>new Date(e.expirationTime))}static async refreshSessionIfNeeded(e,t,s){let r=this.getSession();if(!r)return null;if(new Date(r.expirationTime).getTime()-Date.now()<36e5)try{return await this.signIn(e,t,s)}catch(e){return console.error("Failed to refresh session:",e),this.clearSession(),null}return r}static validateSessionForWallet(e,t,s){return!!e&&e.address.toLowerCase()===t.toLowerCase()&&e.chainId===s&&this.isSessionValid(e)}static getSessionInfo(e){if(!e||!this.isSessionValid(e))return{isValid:!1};let t=new Date(e.expirationTime),s=this.formatTimeUntilExpiry(t);return{isValid:!0,address:e.address,chainId:e.chainId,expiresAt:t,timeUntilExpiry:s}}static formatTimeUntilExpiry(e){let t=new Date,s=e.getTime()-t.getTime();if(s<=0)return"Expired";let r=Math.floor(s/36e5),a=Math.floor(s%36e5/6e4);return r>0?"".concat(r,"h ").concat(a,"m"):"".concat(a,"m")}static createAuthChallenge(e){return btoa(JSON.stringify({address:e.address,signature:e.signature,message:e.message,timestamp:Date.now()}))}static async verifyAuthChallenge(e){try{let{address:t,signature:s,message:r,timestamp:a}=JSON.parse(atob(e));if(Date.now()-a>3e5)return{isValid:!1,error:"Challenge expired"};if(await this.verifySignature(r,s,t))return{isValid:!0,address:t};return{isValid:!1,error:"Invalid signature"}}catch(e){return{isValid:!1,error:"Invalid challenge format"}}}}function m(){let{wallet:e,signer:t,currentNetwork:s}=(0,d.v)(),[r,i]=(0,a.useState)({isAuthenticated:!1,session:null,isAuthenticating:!1,error:null});(0,a.useEffect)(()=>{(()=>{let t=g.getSession();if(t&&e.address&&s){let r=g.validateSessionForWallet(t,e.address,s.id);i({isAuthenticated:r,session:r?t:null,isAuthenticating:!1,error:r?null:"Session invalid for current wallet"}),r||g.clearSession()}else i({isAuthenticated:!1,session:null,isAuthenticating:!1,error:null})})()},[e.address,null==s?void 0:s.id]);let n=(0,a.useCallback)(async()=>{if(!t||!e.address||!s)throw Error("Wallet not connected");i(e=>({...e,isAuthenticating:!0,error:null}));try{let r=await g.signIn(t,e.address,s.id);i({isAuthenticated:!0,session:r,isAuthenticating:!1,error:null})}catch(t){let e=t instanceof Error?t.message:"Authentication failed";throw i(t=>({...t,isAuthenticating:!1,error:e})),t}},[t,e.address,s]),o=(0,a.useCallback)(()=>{g.signOut(),i({isAuthenticated:!1,session:null,isAuthenticating:!1,error:null})},[]),c=(0,a.useCallback)(async()=>{if(t&&e.address&&s)try{let r=await g.refreshSessionIfNeeded(t,e.address,s.id);r&&i(e=>({...e,session:r,isAuthenticated:!0,error:null}))}catch(e){console.error("Failed to refresh session:",e),o()}},[t,e.address,s,o]),l=(0,a.useCallback)(()=>{i(e=>({...e,error:null}))},[]),u=(0,a.useCallback)(()=>g.getSessionInfo(r.session),[r.session]),h=(0,a.useCallback)(()=>r.session?g.createAuthChallenge(r.session):null,[r.session]),m=(0,a.useCallback)(()=>e.isConnected&&!r.isAuthenticated,[e.isConnected,r.isAuthenticated]),f=(0,a.useCallback)(()=>e.isConnected&&!!t&&!!s,[e.isConnected,t,s]);return(0,a.useEffect)(()=>{if(!r.isAuthenticated||!r.session)return;let e=setInterval(()=>{c()},18e5);return()=>clearInterval(e)},[r.isAuthenticated,r.session,c]),(0,a.useEffect)(()=>{e.isConnected||o()},[e.isConnected,o]),{isAuthenticated:r.isAuthenticated,session:r.session,isAuthenticating:r.isAuthenticating,error:r.error,signIn:n,signOut:o,refreshSession:c,clearError:l,getSessionInfo:u,createAuthChallenge:h,needsAuthentication:m,canAuthenticate:f,sessionInfo:u(),authChallenge:h()}}g.STORAGE_KEY="gnus-dao-siwe-session",g.SESSION_DURATION=864e5;var f=s(64315);function w(e){let{variant:t="default",size:s="md",showStatus:a=!0,className:u}=e,{wallet:h}=(0,d.v)(),{isAuthenticated:g,isAuthenticating:w,error:x,signIn:p,signOut:y,sessionInfo:v,needsAuthentication:S,canAuthenticate:N,clearError:A}=m(),b=async()=>{if(!N()){f.Am.error("Please connect your wallet first");return}try{A(),await p(),f.Am.success("Successfully authenticated with Ethereum!")}catch(t){let e=t instanceof Error?t.message:"Authentication failed";f.Am.error(e)}};return h.isConnected?g&&a?(0,r.jsxs)("div",{className:"flex items-center gap-2",children:[(0,r.jsxs)("div",{className:"flex items-center gap-2 px-3 py-2 bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-lg",children:[(0,r.jsx)(c.Z,{className:"h-4 w-4 text-green-600 dark:text-green-400"}),(0,r.jsxs)("div",{className:"flex flex-col",children:[(0,r.jsx)("span",{className:"text-sm font-medium text-green-700 dark:text-green-300",children:"Authenticated"}),v.timeUntilExpiry&&(0,r.jsxs)("span",{className:"text-xs text-green-600 dark:text-green-400 flex items-center gap-1",children:[(0,r.jsx)(n.Z,{className:"h-3 w-3"}),"Expires in ",v.timeUntilExpiry]})]})]}),(0,r.jsx)(l.z,{variant:"outline",size:"sm",onClick:()=>{y(),f.Am.success("Signed out successfully")},className:"text-red-600 hover:text-red-700 hover:bg-red-50 dark:text-red-400 dark:hover:text-red-300 dark:hover:bg-red-900/20",children:"Sign Out"})]}):S()?(0,r.jsxs)("div",{className:"flex items-center gap-2",children:[x&&(0,r.jsxs)("div",{className:"flex items-center gap-2 px-3 py-2 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg",children:[(0,r.jsx)(i.Z,{className:"h-4 w-4 text-red-600 dark:text-red-400"}),(0,r.jsx)("span",{className:"text-sm text-red-700 dark:text-red-300",children:"Authentication required"})]}),(0,r.jsxs)(l.z,{variant:t,size:"md"===s?"default":s,onClick:b,disabled:w,className:"flex items-center gap-2 ".concat(u||""),children:[(0,r.jsx)(o.Z,{className:"h-4 w-4"}),w?"Authenticating...":"Sign In with Ethereum"]})]}):null:null}function x(e){let{children:t,fallback:s,requireAuth:a=!0}=e,{wallet:i}=(0,d.v)(),{isAuthenticated:n,needsAuthentication:c}=m();return a?i.isConnected?a&&c()?s||(0,r.jsxs)("div",{className:"flex flex-col items-center justify-center p-8 text-center",children:[(0,r.jsx)(o.Z,{className:"h-12 w-12 text-yellow-500 mb-4"}),(0,r.jsx)("h3",{className:"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-2",children:"Authentication Required"}),(0,r.jsx)("p",{className:"text-gray-600 dark:text-gray-400 mb-4",children:"Please sign in with Ethereum to access governance features."}),(0,r.jsx)(w,{})]}):a&&!n?s||(0,r.jsxs)("div",{className:"flex flex-col items-center justify-center p-8 text-center",children:[(0,r.jsx)(o.Z,{className:"h-12 w-12 text-red-500 mb-4"}),(0,r.jsx)("h3",{className:"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-2",children:"Authentication Failed"}),(0,r.jsx)("p",{className:"text-gray-600 dark:text-gray-400 mb-4",children:"Your authentication session is invalid. Please sign in again."}),(0,r.jsx)(w,{})]}):(0,r.jsx)(r.Fragment,{children:t}):(0,r.jsxs)("div",{className:"flex flex-col items-center justify-center p-8 text-center",children:[(0,r.jsx)(o.Z,{className:"h-12 w-12 text-gray-400 mb-4"}),(0,r.jsx)("h3",{className:"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-2",children:"Wallet Connection Required"}),(0,r.jsx)("p",{className:"text-gray-600 dark:text-gray-400 mb-4",children:"Please connect your wallet to access this feature."})]}):(0,r.jsx)(r.Fragment,{children:t})}},32853:function(e,t,s){"use strict";s.d(t,{v:function(){return c}});var r=s(45921),a=s(96987),i=s(39855),n=s(48638),o=s(88606);function c(){let e=(0,a.TL)(),t=(0,a.CG)(e=>e.wallet),s=(0,a.CG)(e=>e.web3),c=(0,a.CG)(e=>e.gnusDao);return{wallet:{isConnected:t.isConnected,isConnecting:t.isConnecting,address:t.address,chainId:t.chainId,balance:t.balance,ensName:t.ensName,error:t.error},provider:s.provider,signer:s.signer,currentNetwork:s.currentNetwork,supportedNetworks:s.supportedNetworks,gnusDaoInitialized:c.initialized,gnusDaoContractAddress:c.contractAddress,tokenBalance:c.tokenBalance,votingPower:c.votingPower,voteCredits:c.voteCredits,connect:async t=>{if(!t)throw Error("No wallet connector specified. Please select a wallet.");await e((0,i.connectWallet)(t)).unwrap()},disconnect:async()=>{await e((0,i.co)()).unwrap()},switchNetwork:async t=>{await e((0,i.If)(t)).unwrap()},addNetwork:async e=>{if(!window.ethereum)throw Error("No wallet connected");await window.ethereum.request({method:"wallet_addEthereumChain",params:[{chainId:"0x".concat(e.id.toString(16)),chainName:e.displayName,nativeCurrency:e.nativeCurrency,rpcUrls:e.rpcUrls.default.http,blockExplorerUrls:[e.blockExplorers.default.url]}]})},refreshBalance:async()=>{await e((0,i.Dm)()).unwrap()},getBalance:async s=>{if(s)return await e((0,n.sb)(s)).unwrap();if(t.address)return await e((0,n.sb)(t.address)).unwrap();throw Error("No address provided")},sendTransaction:async t=>{let r=await e((0,n.T7)(t)).unwrap();return{hash:r.hash,from:r.from,to:r.to,value:r.value?BigInt(r.value):void 0,gasLimit:r.gasLimit?BigInt(r.gasLimit):void 0,gasPrice:r.gasPrice?BigInt(r.gasPrice):void 0,wait:async e=>{if(!s.provider)throw Error("No provider available");return await s.provider.waitForTransaction(r.hash,e)}}},estimateGas:async t=>BigInt(await e((0,n.QH)(t)).unwrap()),getContract:(e,t)=>{let a=s.signer||s.provider;if(!a)throw Error("No signer or provider available");return new r.X.Contract(e,t,a)},initializeGnusDao:async()=>{await e((0,o.ar)()).unwrap()},refreshGnusDaoData:async()=>{await e((0,o.c6)()).unwrap()}}}}}]);