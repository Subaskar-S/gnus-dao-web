/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  DiamondLoupeFacet,
  DiamondLoupeFacetInterface,
} from "../../../../contracts-starter/contracts/facets/DiamondLoupeFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_functionSelector",
        type: "bytes4",
      },
    ],
    name: "facetAddress",
    outputs: [
      {
        internalType: "address",
        name: "facetAddress_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "facetAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "facetAddresses_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_facet",
        type: "address",
      },
    ],
    name: "facetFunctionSelectors",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "_facetFunctionSelectors",
        type: "bytes4[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "facets",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondLoupe.Facet[]",
        name: "facets_",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b7a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80637a0ed627116100505780637a0ed627146100e2578063adfca15e146100f7578063cdffacc61461011757600080fd5b806301ffc9a71461006c57806352ef6b2c146100cd575b600080fd5b6100b861007a366004610949565b6001600160e01b03191660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131f602052604090205460ff1690565b60405190151581526020015b60405180910390f35b6100d561017b565b6040516100c4919061097a565b6100ea610358565b6040516100c49190610a0c565b61010a610105366004610a89565b6107bf565b6040516100c49190610ab2565b610163610125366004610949565b6001600160e01b03191660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c602052604090205460601c90565b6040516001600160a01b0390911681526020016100c4565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131e546060907fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c9061ffff1667ffffffffffffffff8111156101de576101de610ac5565b604051908082528060200260200182016040528015610207578160200160208202803683370190505b50915060008060005b600284015461ffff16821015610350576000818152600185016020526040812054905b600881101561033b578361024681610af1565b600288015490955061ffff1685111590506102605761033b565b600581901b82901b6001600160e01b0319811660009081526020889052604081205460601c90805b888110156102de578a81815181106102a2576102a2610b0c565b60200260200101516001600160a01b0316836001600160a01b031614156102cc57600191506102de565b806102d681610af1565b915050610288565b5080156102ed57505050610329565b818a898151811061030057610300610b0c565b6001600160a01b03909216602092830291909101909101528761032281610af1565b9850505050505b8061033381610af1565b915050610233565b5050808061034890610af1565b915050610210565b505082525090565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131e546060907fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c9061ffff1667ffffffffffffffff8111156103bb576103bb610ac5565b60405190808252806020026020018201604052801561040157816020015b6040805180820190915260008152606060208201528152602001906001900390816103d95790505b50600282015490925060009061ffff1667ffffffffffffffff81111561042957610429610ac5565b604051908082528060200260200182016040528015610452578160200160208202803683370190505b50905060008060005b600285015461ffff1682101561074c576000818152600186016020526040812054905b6008811015610737578361049181610af1565b600289015490955061ffff1685111590506104ab57610737565b600581901b82901b6001600160e01b0319811660009081526020899052604081205460601c90805b888110156105f457826001600160a01b03168c82815181106104f7576104f7610b0c565b6020026020010151600001516001600160a01b031614156105e257838c828151811061052557610525610b0c565b6020026020010151602001518b838151811061054357610543610b0c565b602002602001015161ffff168151811061055f5761055f610b0c565b60200260200101906001600160e01b03191690816001600160e01b0319168152505060ff8a828151811061059557610595610b0c565b602002602001015161ffff16106105ab57600080fd5b8981815181106105bd576105bd610b0c565b6020026020010180518091906105d290610b22565b61ffff16905250600191506105f4565b806105ec81610af1565b9150506104d3565b50801561060357505050610725565b818b898151811061061657610616610b0c565b60209081029190910101516001600160a01b03909116905260028a015461ffff1667ffffffffffffffff81111561064f5761064f610ac5565b604051908082528060200260200182016040528015610678578160200160208202803683370190505b508b898151811061068b5761068b610b0c565b602002602001015160200181905250828b89815181106106ad576106ad610b0c565b6020026020010151602001516000815181106106cb576106cb610b0c565b60200260200101906001600160e01b03191690816001600160e01b03191681525050600189898151811061070157610701610b0c565b61ffff909216602092830291909101909101528761071e81610af1565b9850505050505b8061072f81610af1565b91505061047e565b5050808061074490610af1565b91505061045b565b5060005b828110156107b457600084828151811061076c5761076c610b0c565b602002602001015161ffff169050600087838151811061078e5761078e610b0c565b6020026020010151602001519050818152505080806107ac90610af1565b915050610750565b508185525050505090565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131e546060907fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c9060009061ffff1667ffffffffffffffff81111561082557610825610ac5565b60405190808252806020026020018201604052801561084e578160200160208202803683370190505b5092506000805b600284015461ffff1682101561093f576000818152600185016020526040812054905b600881101561092a578361088b81610af1565b600288015490955061ffff1685111590506108a55761092a565b600581901b82901b6001600160e01b0319811660009081526020889052604090205460601c6001600160a01b038a1681141561091557818988815181106108ee576108ee610b0c565b6001600160e01b0319909216602092830291909101909101528661091181610af1565b9750505b5050808061092290610af1565b915050610878565b5050808061093790610af1565b915050610855565b5050825250919050565b60006020828403121561095b57600080fd5b81356001600160e01b03198116811461097357600080fd5b9392505050565b6020808252825182820181905260009190848201906040850190845b818110156109bb5783516001600160a01b031683529284019291840191600101610996565b50909695505050505050565b600081518084526020808501945080840160005b83811015610a015781516001600160e01b031916875295820195908201906001016109db565b509495945050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015610a7b57888303603f19018552815180516001600160a01b03168452870151878401879052610a68878501826109c7565b9588019593505090860190600101610a33565b509098975050505050505050565b600060208284031215610a9b57600080fd5b81356001600160a01b038116811461097357600080fd5b60208152600061097360208301846109c7565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415610b0557610b05610adb565b5060010190565b634e487b7160e01b600052603260045260246000fd5b600061ffff80831681811415610b3a57610b3a610adb565b600101939250505056fea26469706673582212207f9226df742d6c468ba438ad5d0fe67b14042163b0ac3c13aef1c14a62a61fa364736f6c63430008090033";

type DiamondLoupeFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DiamondLoupeFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DiamondLoupeFacet__factory extends ContractFactory {
  constructor(...args: DiamondLoupeFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DiamondLoupeFacet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DiamondLoupeFacet__factory {
    return super.connect(runner) as DiamondLoupeFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiamondLoupeFacetInterface {
    return new Interface(_abi) as DiamondLoupeFacetInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DiamondLoupeFacet {
    return new Contract(address, _abi, runner) as unknown as DiamondLoupeFacet;
  }
}
